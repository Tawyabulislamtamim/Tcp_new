{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle, Image as ImageIcon } from 'lucide-react';\nimport { FiSearch, FiFilter, FiLock, FiGrid, FiList } from 'react-icons/fi';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  var _previewFile$mime_typ, _previewFile$mime_typ2;\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [totalSize, setTotalSize] = useState(0);\n  const [viewMode, setViewMode] = useState('grid');\n  const [previewFile, setPreviewFile] = useState(null);\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n      } catch (error) {\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  useEffect(() => {\n    const fetchTotalSize = async () => {\n      try {\n        const data = await apiService.listFiles('');\n        const sum = data.files.reduce((acc, f) => acc + (f.size || 0), 0);\n        setTotalSize(sum);\n      } catch {\n        setTotalSize(0);\n      }\n    };\n    fetchTotalSize();\n  }, [files]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const navigateToDirectory = path => setCurrentPath(path);\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) navigateToDirectory(file.path);else if (onFileSelect) onFileSelect(file);\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n    if (!clientId) {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n      } catch (error) {\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      setShowDownloadProgress(true);\n      await startMegaStyleDownload(file.path, file.name, clientId);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\n    const sessionData = await apiService.startDownloadSession(filePath, clientId);\n    const newDownload = {\n      sessionId: sessionData.session_id,\n      fileName: sessionData.file_name,\n      fileSize: sessionData.file_size,\n      clientId: sessionData.client_id,\n      progress: 0,\n      speed: 0,\n      eta: 0,\n      status: 'starting',\n      startTime: Date.now()\n    };\n    setDownloadSessions(prev => [...prev, newDownload]);\n    triggerBrowserDownload(newDownload.sessionId);\n    trackDownloadProgress(newDownload.sessionId);\n  };\n  const trackDownloadProgress = async sessionId => {\n    const poll = async () => {\n      try {\n        const progress = await apiService.getDownloadProgress(sessionId);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          ...progress,\n          status: progress.is_complete ? 'completed' : 'downloading'\n        } : download));\n        if (!progress.error && !progress.is_complete) {\n          setTimeout(poll, 500);\n        }\n      } catch (error) {\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    poll();\n  };\n  const triggerBrowserDownload = sessionId => {\n    const link = document.createElement('a');\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    setTimeout(() => document.body.removeChild(link), 100);\n  };\n  const handleUploadSuccess = res => {\n    setUploadSuccess(`Successfully uploaded ${res.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath);\n    setTimeout(() => setUploadSuccess(null), 5000);\n  };\n  const handleUploadError = err => {\n    setUploadError(err);\n    setUploadSuccess(null);\n    setTimeout(() => setUploadError(null), 7000);\n  };\n  const handleSearchChange = async e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    if (!query.trim()) return setSearchResults(null);\n    try {\n      const data = await apiService.listFiles(currentPath);\n      setSearchResults(data.files.filter(f => f.name.toLowerCase().includes(query.toLowerCase())));\n    } catch {\n      setSearchResults([]);\n    }\n  };\n  const handlePreview = (file, e) => {\n    e.stopPropagation();\n    setPreviewFile(file);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  const displayedFiles = searchResults !== null && searchResults !== void 0 ? searchResults : files;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box\",\n            children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n              className: \"search-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search files\\u2026\",\n              value: searchQuery,\n              onChange: handleSearchChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            children: [/*#__PURE__*/_jsxDEV(FiFilter, {\n              className: \"filter-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), \" Filter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(FiLock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [formatFileSize(totalSize), \" / 10 GB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('grid'),\n            className: viewMode === 'grid' ? 'selected' : '',\n            children: /*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 107\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('list'),\n            className: viewMode === 'list' ? 'selected' : '',\n            children: /*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 107\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-files-label\",\n      children: \"Recent Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), displayedFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No files found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this) : viewMode === 'grid' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-grid\",\n      children: displayedFiles.map(file => {\n        var _file$mime_type, _file$mime_type2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-card\",\n          onClick: () => handleFileClick(file),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-card-preview\",\n            children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n              size: 56\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this) : (_file$mime_type = file.mime_type) !== null && _file$mime_type !== void 0 && _file$mime_type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(ImageIcon, {\n              size: 56\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this) : (_file$mime_type2 = file.mime_type) !== null && _file$mime_type2 !== void 0 && _file$mime_type2.startsWith('video/') ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83C\\uDFAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(File, {\n              size: 56\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-card-name\",\n              title: file.name,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-card-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatDate(file.modified_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-card-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handlePreview(file, e),\n                className: \"preview-btn\",\n                children: \"Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handleDownload(file, e),\n                className: \"download-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: displayedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-item\",\n        onClick: () => handleFileClick(file),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 63\n          }, this) : /*#__PURE__*/_jsxDEV(File, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(file.modified_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handlePreview(file, e),\n            className: \"preview-btn\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDownload(file, e),\n            className: \"download-button\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, file.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }, this), showDownloadProgress && downloadSessions.length > 0 && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      downloads: downloadSessions,\n      onClose: () => setShowDownloadProgress(false),\n      onRemoveDownload: sessionId => setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), previewFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-preview-modal\",\n      onClick: () => setPreviewFile(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Preview: \", previewFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-preview\",\n          onClick: () => setPreviewFile(null),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), ((_previewFile$mime_typ = previewFile.mime_type) === null || _previewFile$mime_typ === void 0 ? void 0 : _previewFile$mime_typ.startsWith('image/')) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`,\n          alt: previewFile.name,\n          style: {\n            maxWidth: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this), ((_previewFile$mime_typ2 = previewFile.mime_type) === null || _previewFile$mime_typ2 === void 0 ? void 0 : _previewFile$mime_typ2.startsWith('video/')) && /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          style: {\n            maxWidth: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`,\n            type: previewFile.mime_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this), previewFile.mime_type === 'application/pdf' && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`,\n          title: \"PDF Preview\",\n          width: \"100%\",\n          height: \"600px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this), !['image', 'video', 'application/pdf'].some(t => {\n          var _previewFile$mime_typ3;\n          return (_previewFile$mime_typ3 = previewFile.mime_type) === null || _previewFile$mime_typ3 === void 0 ? void 0 : _previewFile$mime_typ3.startsWith(t);\n        }) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Preview not available for this file type.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"fzWrlFGzMPplFjKxYQnc7NOKSxo=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","Image","ImageIcon","FiSearch","FiFilter","FiLock","FiGrid","FiList","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","_previewFile$mime_typ","_previewFile$mime_typ2","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","searchQuery","setSearchQuery","searchResults","setSearchResults","totalSize","setTotalSize","viewMode","setViewMode","previewFile","setPreviewFile","getClientId","response","connect","client_id","message","fetchFiles","fetchTotalSize","data","listFiles","sum","reduce","acc","f","size","path","pathParts","split","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","navigateToDirectory","navigateUp","pop","join","handleFileClick","file","is_directory","handleDownload","e","stopPropagation","startMegaStyleDownload","filePath","fileName","sessionData","startDownloadSession","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","prev","triggerBrowserDownload","trackDownloadProgress","poll","getDownloadProgress","map","download","is_complete","setTimeout","link","document","createElement","baseURL","process","env","REACT_APP_API_URL","href","style","display","body","appendChild","click","removeChild","handleUploadSuccess","res","filename","handleUploadError","handleSearchChange","query","target","value","trim","toLowerCase","includes","handlePreview","className","children","_jsxFileName","lineNumber","columnNumber","onClick","displayedFiles","type","placeholder","onChange","_file$mime_type","_file$mime_type2","mime_type","startsWith","title","modified_time","onUploadSuccess","onUploadError","downloads","onClose","onRemoveDownload","d","src","alt","maxWidth","controls","width","height","some","t","_previewFile$mime_typ3","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Folder, File, ChevronLeft, Download, Loader2, AlertCircle,\r\n  Image as ImageIcon\r\n} from 'lucide-react';\r\nimport {\r\n  FiSearch, FiFilter, FiLock, FiGrid, FiList\r\n} from 'react-icons/fi';\r\n\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState(null);\r\n  const [totalSize, setTotalSize] = useState(0);\r\n  const [viewMode, setViewMode] = useState('grid');\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n      } catch (error) {\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalSize = async () => {\r\n      try {\r\n        const data = await apiService.listFiles('');\r\n        const sum = data.files.reduce((acc, f) => acc + (f.size || 0), 0);\r\n        setTotalSize(sum);\r\n      } catch {\r\n        setTotalSize(0);\r\n      }\r\n    };\r\n    fetchTotalSize();\r\n  }, [files]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({ name: pathParts[i], path: accumulatedPath });\r\n      }\r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateToDirectory = (path) => setCurrentPath(path);\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) navigateToDirectory(file.path);\r\n    else if (onFileSelect) onFileSelect(file);\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    if (!clientId) {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n      } catch (error) {\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      setShowDownloadProgress(true);\r\n      await startMegaStyleDownload(file.path, file.name, clientId);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\r\n    const sessionData = await apiService.startDownloadSession(filePath, clientId);\r\n    const newDownload = {\r\n      sessionId: sessionData.session_id,\r\n      fileName: sessionData.file_name,\r\n      fileSize: sessionData.file_size,\r\n      clientId: sessionData.client_id,\r\n      progress: 0, speed: 0, eta: 0,\r\n      status: 'starting',\r\n      startTime: Date.now()\r\n    };\r\n    setDownloadSessions(prev => [...prev, newDownload]);\r\n    triggerBrowserDownload(newDownload.sessionId);\r\n    trackDownloadProgress(newDownload.sessionId);\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const poll = async () => {\r\n      try {\r\n        const progress = await apiService.getDownloadProgress(sessionId);\r\n        setDownloadSessions(prev => prev.map(download =>\r\n          download.sessionId === sessionId\r\n            ? { ...download, ...progress, status: progress.is_complete ? 'completed' : 'downloading' }\r\n            : download\r\n        ));\r\n        if (!progress.error && !progress.is_complete) {\r\n          setTimeout(poll, 500);\r\n        }\r\n      } catch (error) {\r\n        setDownloadSessions(prev => prev.map(download =>\r\n          download.sessionId === sessionId\r\n            ? { ...download, status: 'error', error: error.message }\r\n            : download\r\n        ));\r\n      }\r\n    };\r\n    poll();\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    const link = document.createElement('a');\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    setTimeout(() => document.body.removeChild(link), 100);\r\n  };\r\n\r\n  const handleUploadSuccess = (res) => {\r\n    setUploadSuccess(`Successfully uploaded ${res.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath);\r\n    setTimeout(() => setUploadSuccess(null), 5000);\r\n  };\r\n\r\n  const handleUploadError = (err) => {\r\n    setUploadError(err);\r\n    setUploadSuccess(null);\r\n    setTimeout(() => setUploadError(null), 7000);\r\n  };\r\n\r\n  const handleSearchChange = async (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    if (!query.trim()) return setSearchResults(null);\r\n\r\n    try {\r\n      const data = await apiService.listFiles(currentPath);\r\n      setSearchResults(data.files.filter(f =>\r\n        f.name.toLowerCase().includes(query.toLowerCase())\r\n      ));\r\n    } catch {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (file, e) => {\r\n    e.stopPropagation();\r\n    setPreviewFile(file);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3>Error Loading Files</h3>\r\n        <p>{error}</p>\r\n        <button onClick={() => fetchFiles(currentPath)}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const displayedFiles = searchResults ?? files;\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-manager-header\">\r\n        <div className=\"left-section\">\r\n          <h2>File Manager</h2>\r\n          <div className=\"search-filter-group\">\r\n            <div className=\"search-box\">\r\n              <FiSearch className=\"search-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search files…\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n              />\r\n            </div>\r\n            <button className=\"filter-button\">\r\n              <FiFilter className=\"filter-icon\" /> Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          <div className=\"storage-indicator\">\r\n            <FiLock /> <span>{formatFileSize(totalSize)} / 10 GB</span>\r\n          </div>\r\n          <div className=\"view-toggle\">\r\n            <button onClick={() => setViewMode('grid')} className={viewMode === 'grid' ? 'selected' : ''}><FiGrid /></button>\r\n            <button onClick={() => setViewMode('list')} className={viewMode === 'list' ? 'selected' : ''}><FiList /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recent-files-label\">Recent Files</div>\r\n\r\n      {displayedFiles.length === 0 ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} />\r\n          <h3>No files found</h3>\r\n        </div>\r\n      ) : viewMode === 'grid' ? (\r\n        <div className=\"file-grid\">\r\n          {displayedFiles.map(file => (\r\n            <div key={file.path} className=\"file-card\" onClick={() => handleFileClick(file)}>\r\n              <div className=\"file-card-preview\">\r\n                {file.is_directory ? (\r\n                  <Folder size={56} />\r\n                ) : file.mime_type?.startsWith('image/') ? (\r\n                  <ImageIcon size={56} />\r\n                ) : file.mime_type?.startsWith('video/') ? (\r\n                  <span>🎬</span>\r\n                ) : (\r\n                  <File size={56} />\r\n                )}\r\n              </div>\r\n              <div className=\"file-card-info\">\r\n                <div className=\"file-card-name\" title={file.name}>{file.name}</div>\r\n                <div className=\"file-card-meta\">\r\n                  <span>{formatFileSize(file.size)}</span>\r\n                  <span>{formatDate(file.modified_time)}</span>\r\n                </div>\r\n                {!file.is_directory && (\r\n                  <div className=\"file-card-buttons\">\r\n                    <button onClick={(e) => handlePreview(file, e)} className=\"preview-btn\">Preview</button>\r\n                    <button onClick={(e) => handleDownload(file, e)} className=\"download-button\">\r\n                      <Download size={16} />\r\n                      <span>Download</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"file-list\">\r\n          {displayedFiles.map(file => (\r\n            <div key={file.path} className=\"file-item\" onClick={() => handleFileClick(file)}>\r\n              <div className=\"file-icon\">{file.is_directory ? <Folder size={24} /> : <File size={24} />}</div>\r\n              <div className=\"file-info\">\r\n                <div className=\"file-name\">{file.name}</div>\r\n                <div className=\"file-details\">\r\n                  <span>{formatFileSize(file.size)}</span>\r\n                  <span>{formatDate(file.modified_time)}</span>\r\n                </div>\r\n              </div>\r\n              {!file.is_directory && (\r\n                <div className=\"file-actions\">\r\n                  <button onClick={(e) => handlePreview(file, e)} className=\"preview-btn\">Preview</button>\r\n                  <button onClick={(e) => handleDownload(file, e)} className=\"download-button\">Download</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <FileUpload\r\n        currentPath={currentPath}\r\n        onUploadSuccess={handleUploadSuccess}\r\n        onUploadError={handleUploadError}\r\n      />\r\n\r\n      {uploadSuccess && <div className=\"upload-feedback success\">{uploadSuccess}</div>}\r\n      {uploadError && <div className=\"upload-feedback error\">{uploadError}</div>}\r\n\r\n      {showDownloadProgress && downloadSessions.length > 0 && (\r\n        <DownloadProgress\r\n          downloads={downloadSessions}\r\n          onClose={() => setShowDownloadProgress(false)}\r\n          onRemoveDownload={(sessionId) => setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))}\r\n        />\r\n      )}\r\n\r\n      {/* 👁️ Preview Modal */}\r\n      {previewFile && (\r\n        <div className=\"file-preview-modal\" onClick={() => setPreviewFile(null)}>\r\n          <div className=\"preview-content\" onClick={(e) => e.stopPropagation()}>\r\n            <h3>Preview: {previewFile.name}</h3>\r\n            <button className=\"close-preview\" onClick={() => setPreviewFile(null)}>✖</button>\r\n            {previewFile.mime_type?.startsWith('image/') && (\r\n              <img\r\n                src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`}\r\n                alt={previewFile.name}\r\n                style={{ maxWidth: '100%' }}\r\n              />\r\n            )}\r\n            {previewFile.mime_type?.startsWith('video/') && (\r\n              <video controls style={{ maxWidth: '100%' }}>\r\n                <source\r\n                  src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`}\r\n                  type={previewFile.mime_type}\r\n                />\r\n              </video>\r\n            )}\r\n            {previewFile.mime_type === 'application/pdf' && (\r\n              <iframe\r\n                src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000/api'}/files/raw/${previewFile.path}`}\r\n                title=\"PDF Preview\"\r\n                width=\"100%\"\r\n                height=\"600px\"\r\n              />\r\n            )}\r\n            {!['image', 'video', 'application/pdf'].some(t => previewFile.mime_type?.startsWith(t)) && (\r\n              <p>Preview not available for this file type.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}