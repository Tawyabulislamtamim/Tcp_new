{"ast":null,"code":"import React,{useState,useEffect}from'react';import FileExplorer from'./components/FileExplorer/FileExplorer';import apiService from'./services/api';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[connectionStatus,setConnectionStatus]=useState('connecting');// 'connecting', 'connected', 'disconnected'\nconst[error,setError]=useState(null);useEffect(()=>{let retryTimeout;const connectToServer=async()=>{try{await apiService.connect();setConnectionStatus('connected');setError(null);}catch(err){setConnectionStatus('disconnected');setError(err.message);retryTimeout=setTimeout(connectToServer,5000);// Retry in 5 seconds\n}};connectToServer();return()=>{apiService.disconnect();clearTimeout(retryTimeout);};},[]);const handleFileSelect=file=>{console.log('Selected file:',file);// Future: preview or transfer functionality\n};if(connectionStatus==='connecting'){return/*#__PURE__*/_jsxs(\"div\",{className:\"app connecting\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Connecting to server...\"})]});}if(connectionStatus==='disconnected'){return/*#__PURE__*/_jsxs(\"div\",{className:\"app connecting\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Connection Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error||'Unable to connect to the server.'}),/*#__PURE__*/_jsx(\"p\",{children:\"Retrying in a few seconds...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TCP File Transfer System\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"connection-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-dot connected\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Connected\"})]})]}),/*#__PURE__*/_jsx(\"main\",{className:\"app-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-panel\",children:/*#__PURE__*/_jsx(FileExplorer,{onFileSelect:handleFileSelect})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-placeholder\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Metrics Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Network metrics will appear here\"})]})})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","FileExplorer","apiService","jsx","_jsx","jsxs","_jsxs","App","connectionStatus","setConnectionStatus","error","setError","retryTimeout","connectToServer","connect","err","message","setTimeout","disconnect","clearTimeout","handleFileSelect","file","console","log","className","children","onFileSelect"],"sources":["C:/Users/iamov/Desktop/Net/tcp-file-transfer/tcp-file-transfer/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileExplorer from './components/FileExplorer/FileExplorer';\r\nimport apiService from './services/api';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [connectionStatus, setConnectionStatus] = useState('connecting'); // 'connecting', 'connected', 'disconnected'\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let retryTimeout;\r\n\r\n    const connectToServer = async () => {\r\n      try {\r\n        await apiService.connect();\r\n        setConnectionStatus('connected');\r\n        setError(null);\r\n      } catch (err) {\r\n        setConnectionStatus('disconnected');\r\n        setError(err.message);\r\n        retryTimeout = setTimeout(connectToServer, 5000); // Retry in 5 seconds\r\n      }\r\n    };\r\n\r\n    connectToServer();\r\n\r\n    return () => {\r\n      apiService.disconnect();\r\n      clearTimeout(retryTimeout);\r\n    };\r\n  }, []);\r\n\r\n  const handleFileSelect = (file) => {\r\n    console.log('Selected file:', file);\r\n    // Future: preview or transfer functionality\r\n  };\r\n\r\n  if (connectionStatus === 'connecting') {\r\n    return (\r\n      <div className=\"app connecting\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Connecting to server...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (connectionStatus === 'disconnected') {\r\n    return (\r\n      <div className=\"app connecting\">\r\n        <div className=\"error-icon\">⚠️</div>\r\n        <h2>Connection Error</h2>\r\n        <p>{error || 'Unable to connect to the server.'}</p>\r\n        <p>Retrying in a few seconds...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <h1>TCP File Transfer System</h1>\r\n        <div className=\"connection-indicator\">\r\n          <span className=\"status-dot connected\"></span>\r\n          <span>Connected</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"app-main\">\r\n        <div className=\"app-layout\">\r\n          <div className=\"left-panel\">\r\n            <FileExplorer onFileSelect={handleFileSelect} />\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {/* Placeholder for future metrics */}\r\n            <div className=\"metrics-placeholder\">\r\n              <h2>Metrics Dashboard</h2>\r\n              <p>Network metrics will appear here</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}