{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle, Eye, FileText, Image as ImageIcon, Video, Music, Archive, Code, FileSpreadsheet, Presentation } from 'lucide-react';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [selectedFiles, setSelectedFiles] = useState(new Set());\n  const [visibleFiles, setVisibleFiles] = useState(6); // Show first 6 files by default\n\n  // Get file type icon based on extension\n  const getFileIcon = (fileName, isDirectory) => {\n    var _fileName$split$pop;\n    if (isDirectory) {\n      return /*#__PURE__*/_jsxDEV(Folder, {\n        size: 20,\n        className: \"text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    }\n    const extension = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n    const iconProps = {\n      size: 20\n    };\n    switch (extension) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(FileText, {\n          ...iconProps,\n          className: \"text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      case 'doc':\n      case 'docx':\n        return /*#__PURE__*/_jsxDEV(FileText, {\n          ...iconProps,\n          className: \"text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      case 'xls':\n      case 'xlsx':\n        return /*#__PURE__*/_jsxDEV(FileSpreadsheet, {\n          ...iconProps,\n          className: \"text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n      case 'ppt':\n      case 'pptx':\n        return /*#__PURE__*/_jsxDEV(Presentation, {\n          ...iconProps,\n          className: \"text-orange-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n      case 'svg':\n        return /*#__PURE__*/_jsxDEV(ImageIcon, {\n          ...iconProps,\n          className: \"text-purple-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n      case 'mp4':\n      case 'avi':\n      case 'mov':\n      case 'wmv':\n        return /*#__PURE__*/_jsxDEV(Video, {\n          ...iconProps,\n          className: \"text-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n      case 'mp3':\n      case 'wav':\n      case 'flac':\n        return /*#__PURE__*/_jsxDEV(Music, {\n          ...iconProps,\n          className: \"text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n      case 'zip':\n      case 'rar':\n      case '7z':\n        return /*#__PURE__*/_jsxDEV(Archive, {\n          ...iconProps,\n          className: \"text-yellow-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n      case 'js':\n      case 'jsx':\n      case 'ts':\n      case 'tsx':\n      case 'html':\n      case 'css':\n      case 'py':\n      case 'java':\n      case 'cpp':\n        return /*#__PURE__*/_jsxDEV(Code, {\n          ...iconProps,\n          className: \"text-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(File, {\n          ...iconProps,\n          className: \"text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Check if file can be previewed\n  const canPreview = fileName => {\n    var _fileName$split$pop2;\n    const extension = (_fileName$split$pop2 = fileName.split('.').pop()) === null || _fileName$split$pop2 === void 0 ? void 0 : _fileName$split$pop2.toLowerCase();\n    return ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'svg', 'mp4', 'avi', 'mov', 'txt'].includes(extension);\n  };\n\n  // Get client ID for downloads\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Client connected:', response.client_id);\n      } catch (error) {\n        console.error('Failed to get client ID:', error);\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n      setVisibleFiles(6); // Reset to show first 6 files\n\n      // Generate breadcrumbs\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      console.error('Failed to fetch files:', err);\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n  };\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) {\n      navigateToDirectory(file.path);\n    } else {\n      if (onFileSelect) {\n        onFileSelect(file);\n      }\n    }\n  };\n  const handleCheckboxChange = filePath => {\n    setSelectedFiles(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(filePath)) {\n        newSelected.delete(filePath);\n      } else {\n        newSelected.add(filePath);\n      }\n      return newSelected;\n    });\n  };\n  const handlePreview = (file, e) => {\n    e.stopPropagation();\n    if (!canPreview(file.name)) {\n      alert('Preview not available for this file type');\n      return;\n    }\n\n    // Create preview URL\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    const previewUrl = `${baseURL}/files/preview/${encodeURIComponent(file.path)}`;\n\n    // Open in new tab\n    window.open(previewUrl, '_blank');\n  };\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\n    try {\n      // Start download session using API service\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\n\n      // Add to downloads list\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloadSessions(prev => [...prev, newDownload]);\n\n      // Immediately trigger browser download (no waiting for processing)\n      triggerBrowserDownload(newDownload.sessionId);\n\n      // Start progress tracking\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (error) {\n      console.error('Download error:', error);\n      throw error;\n    }\n  };\n  const trackDownloadProgress = async sessionId => {\n    const pollProgress = async () => {\n      try {\n        const progress = await apiService.getDownloadProgress(sessionId);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : download));\n\n        // Continue polling while download is active\n        if (!progress.error && !progress.is_complete) {\n          setTimeout(pollProgress, 500); // Poll every 500ms for smoother updates\n        } else if (progress.is_complete) {\n          // Mark as completed - no need to trigger another download\n          setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n        }\n      } catch (error) {\n        console.error('Progress tracking error:', error);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    pollProgress();\n  };\n  const triggerBrowserDownload = sessionId => {\n    // Update status to show download is starting\n    setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n      ...download,\n      status: 'downloading'\n    } : download));\n\n    // Create hidden link to trigger download - use full URL from API service\n    const link = document.createElement('a');\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    setTimeout(() => {\n      document.body.removeChild(link);\n    }, 100);\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n\n    // Try to reconnect if no client ID\n    if (!clientId) {\n      try {\n        console.log('No client ID, attempting to reconnect...');\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Reconnected with client ID:', response.client_id);\n      } catch (error) {\n        console.error('Reconnection failed:', error);\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      // Show download progress panel\n      setShowDownloadProgress(true);\n\n      // Start the Mega.nz style download directly\n      await startMegaStyleDownload(file.path, file.name, clientId);\n    } catch (err) {\n      console.error('Download failed:', err);\n      setError(err.message);\n    }\n  };\n  const handleUploadSuccess = response => {\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath); // Refresh file list\n\n    // Clear success message after 5 seconds\n    setTimeout(() => {\n      setUploadSuccess(null);\n    }, 5000);\n  };\n  const handleUploadError = error => {\n    setUploadError(error);\n    setUploadSuccess(null);\n\n    // Clear error message after 7 seconds\n    setTimeout(() => {\n      setUploadError(null);\n    }, 7000);\n  };\n  const showAllFiles = () => {\n    setVisibleFiles(files.length);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateUp,\n          disabled: !currentPath,\n          className: `back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), \"Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breadcrumbs flex items-center overflow-x-auto py-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigateToDirectory(''),\n              className: \"text-blue-500 hover:text-blue-700 text-sm font-medium\",\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), breadcrumbs.map((crumb, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2 text-gray-400\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigateToDirectory(crumb.path),\n                className: \"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\",\n                children: crumb.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path text-sm text-gray-500 truncate\",\n        children: currentPath || 'Root directory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-files-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: [\"Recent Files (\", files.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48,\n        className: \"mx-auto mb-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-600\",\n        children: \"Empty directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No files found in this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: [files.slice(0, visibleFiles).map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `file-list-item ${file.is_directory ? 'directory' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedFiles.has(file.path),\n            onChange: () => handleCheckboxChange(file.path),\n            onClick: e => e.stopPropagation()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon-container\",\n          children: getFileIcon(file.name, file.is_directory)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-main-info\",\n          onClick: () => handleFileClick(file),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name-size\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-size\",\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-date\",\n          children: formatDate(file.modified_time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-actions\",\n          children: [!file.is_directory && canPreview(file.name) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handlePreview(file, e),\n            className: \"preview-button\",\n            title: \"Preview\",\n            children: [/*#__PURE__*/_jsxDEV(Eye, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 21\n            }, this), \"Preview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 19\n          }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDownload(file, e),\n            className: \"download-button\",\n            title: \"Download\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 21\n            }, this), \"Download\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }, this)]\n      }, file.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }, this)), visibleFiles < files.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-all-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showAllFiles,\n          className: \"show-all-button\",\n          children: [\"Show All (\", files.length - visibleFiles, \" more)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this), showDownloadProgress && downloadSessions.length > 0 && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      downloads: downloadSessions,\n      onClose: () => setShowDownloadProgress(false),\n      onRemoveDownload: sessionId => setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"xxgU7UslI3IENyrzpUkLmtIYdyM=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","Eye","FileText","Image","ImageIcon","Video","Music","Archive","Code","FileSpreadsheet","Presentation","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","selectedFiles","setSelectedFiles","Set","visibleFiles","setVisibleFiles","getFileIcon","fileName","isDirectory","_fileName$split$pop","size","className","_jsxFileName","lineNumber","columnNumber","extension","split","pop","toLowerCase","iconProps","canPreview","_fileName$split$pop2","includes","getClientId","response","connect","client_id","console","log","message","fetchFiles","path","data","listFiles","pathParts","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","navigateToDirectory","navigateUp","join","handleFileClick","file","is_directory","handleCheckboxChange","filePath","prev","newSelected","has","delete","add","handlePreview","e","stopPropagation","alert","baseURL","process","env","REACT_APP_API_URL","previewUrl","encodeURIComponent","window","open","startMegaStyleDownload","sessionData","startDownloadSession","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","triggerBrowserDownload","trackDownloadProgress","pollProgress","getDownloadProgress","map","download","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","setTimeout","link","document","createElement","href","style","display","body","appendChild","click","removeChild","handleDownload","handleUploadSuccess","filename","handleUploadError","showAllFiles","children","onClick","disabled","crumb","index","Fragment","slice","type","checked","onChange","modified_time","title","onUploadSuccess","onUploadError","downloads","onClose","onRemoveDownload","d","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Folder, \r\n  File, \r\n  ChevronLeft, \r\n  Download, \r\n  Loader2, \r\n  AlertCircle, \r\n  Eye,\r\n  FileText,\r\n  Image as ImageIcon,\r\n  Video,\r\n  Music,\r\n  Archive,\r\n  Code,\r\n  FileSpreadsheet,\r\n  Presentation\r\n} from 'lucide-react';\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState(new Set());\r\n  const [visibleFiles, setVisibleFiles] = useState(6); // Show first 6 files by default\r\n\r\n  // Get file type icon based on extension\r\n  const getFileIcon = (fileName, isDirectory) => {\r\n    if (isDirectory) {\r\n      return <Folder size={20} className=\"text-blue-500\" />;\r\n    }\r\n\r\n    const extension = fileName.split('.').pop()?.toLowerCase();\r\n    const iconProps = { size: 20 };\r\n\r\n    switch (extension) {\r\n      case 'pdf':\r\n        return <FileText {...iconProps} className=\"text-red-500\" />;\r\n      case 'doc':\r\n      case 'docx':\r\n        return <FileText {...iconProps} className=\"text-blue-600\" />;\r\n      case 'xls':\r\n      case 'xlsx':\r\n        return <FileSpreadsheet {...iconProps} className=\"text-green-600\" />;\r\n      case 'ppt':\r\n      case 'pptx':\r\n        return <Presentation {...iconProps} className=\"text-orange-500\" />;\r\n      case 'jpg':\r\n      case 'jpeg':\r\n      case 'png':\r\n      case 'gif':\r\n      case 'svg':\r\n        return <ImageIcon {...iconProps} className=\"text-purple-500\" />;\r\n      case 'mp4':\r\n      case 'avi':\r\n      case 'mov':\r\n      case 'wmv':\r\n        return <Video {...iconProps} className=\"text-red-600\" />;\r\n      case 'mp3':\r\n      case 'wav':\r\n      case 'flac':\r\n        return <Music {...iconProps} className=\"text-green-500\" />;\r\n      case 'zip':\r\n      case 'rar':\r\n      case '7z':\r\n        return <Archive {...iconProps} className=\"text-yellow-600\" />;\r\n      case 'js':\r\n      case 'jsx':\r\n      case 'ts':\r\n      case 'tsx':\r\n      case 'html':\r\n      case 'css':\r\n      case 'py':\r\n      case 'java':\r\n      case 'cpp':\r\n        return <Code {...iconProps} className=\"text-gray-600\" />;\r\n      default:\r\n        return <File {...iconProps} className=\"text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  // Check if file can be previewed\r\n  const canPreview = (fileName) => {\r\n    const extension = fileName.split('.').pop()?.toLowerCase();\r\n    return ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'svg', 'mp4', 'avi', 'mov', 'txt'].includes(extension);\r\n  };\r\n\r\n  // Get client ID for downloads\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Client connected:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Failed to get client ID:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n      setVisibleFiles(6); // Reset to show first 6 files\r\n      \r\n      // Generate breadcrumbs\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      \r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({\r\n          name: pathParts[i],\r\n          path: accumulatedPath\r\n        });\r\n      }\r\n      \r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      console.error('Failed to fetch files:', err);\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateToDirectory = (path) => {\r\n    setCurrentPath(path);\r\n  };\r\n\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    \r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) {\r\n      navigateToDirectory(file.path);\r\n    } else {\r\n      if (onFileSelect) {\r\n        onFileSelect(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (filePath) => {\r\n    setSelectedFiles(prev => {\r\n      const newSelected = new Set(prev);\r\n      if (newSelected.has(filePath)) {\r\n        newSelected.delete(filePath);\r\n      } else {\r\n        newSelected.add(filePath);\r\n      }\r\n      return newSelected;\r\n    });\r\n  };\r\n\r\n  const handlePreview = (file, e) => {\r\n    e.stopPropagation();\r\n    \r\n    if (!canPreview(file.name)) {\r\n      alert('Preview not available for this file type');\r\n      return;\r\n    }\r\n\r\n    // Create preview URL\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    const previewUrl = `${baseURL}/files/preview/${encodeURIComponent(file.path)}`;\r\n    \r\n    // Open in new tab\r\n    window.open(previewUrl, '_blank');\r\n  };\r\n\r\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\r\n    try {\r\n      // Start download session using API service\r\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\r\n      \r\n      // Add to downloads list\r\n      const newDownload = {\r\n        sessionId: sessionData.session_id,\r\n        fileName: sessionData.file_name,\r\n        fileSize: sessionData.file_size,\r\n        clientId: sessionData.client_id,\r\n        progress: 0,\r\n        speed: 0,\r\n        eta: 0,\r\n        status: 'starting',\r\n        startTime: Date.now()\r\n      };\r\n      setDownloadSessions(prev => [...prev, newDownload]);\r\n      \r\n      // Immediately trigger browser download (no waiting for processing)\r\n      triggerBrowserDownload(newDownload.sessionId);\r\n      \r\n      // Start progress tracking\r\n      trackDownloadProgress(newDownload.sessionId);\r\n    } catch (error) {\r\n      console.error('Download error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const pollProgress = async () => {\r\n      try {\r\n        const progress = await apiService.getDownloadProgress(sessionId);\r\n        \r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? {\r\n              ...download,\r\n              progress: progress.progress_percent,\r\n              speed: progress.speed_mbps,\r\n              eta: progress.eta_seconds,\r\n              bytesTransferred: progress.bytes_transferred,\r\n              status: progress.is_complete ? 'completed' : \r\n                     progress.is_processing ? 'downloading' : 'starting'\r\n            }\r\n            : download\r\n        ));\r\n        \r\n        // Continue polling while download is active\r\n        if (!progress.error && !progress.is_complete) {\r\n          setTimeout(pollProgress, 500);  // Poll every 500ms for smoother updates\r\n        } else if (progress.is_complete) {\r\n          // Mark as completed - no need to trigger another download\r\n          setDownloadSessions(prev => prev.map(download => \r\n            download.sessionId === sessionId \r\n              ? { ...download, status: 'completed' }\r\n              : download\r\n          ));\r\n        }\r\n      } catch (error) {\r\n        console.error('Progress tracking error:', error);\r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? { ...download, status: 'error', error: error.message }\r\n            : download\r\n        ));\r\n      }\r\n    };\r\n    pollProgress();\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    // Update status to show download is starting\r\n    setDownloadSessions(prev => prev.map(download => \r\n      download.sessionId === sessionId \r\n        ? { ...download, status: 'downloading' }\r\n        : download\r\n    ));\r\n    \r\n    // Create hidden link to trigger download - use full URL from API service\r\n    const link = document.createElement('a');\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    \r\n    // Clean up\r\n    setTimeout(() => {\r\n      document.body.removeChild(link);\r\n    }, 100);\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // Try to reconnect if no client ID\r\n    if (!clientId) {\r\n      try {\r\n        console.log('No client ID, attempting to reconnect...');\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Reconnected with client ID:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Reconnection failed:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    try {\r\n      // Show download progress panel\r\n      setShowDownloadProgress(true);\r\n      \r\n      // Start the Mega.nz style download directly\r\n      await startMegaStyleDownload(file.path, file.name, clientId);\r\n    } catch (err) {\r\n      console.error('Download failed:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (response) => {\r\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath); // Refresh file list\r\n    \r\n    // Clear success message after 5 seconds\r\n    setTimeout(() => {\r\n      setUploadSuccess(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleUploadError = (error) => {\r\n    setUploadError(error);\r\n    setUploadSuccess(null);\r\n    \r\n    // Clear error message after 7 seconds\r\n    setTimeout(() => {\r\n      setUploadError(null);\r\n    }, 7000);\r\n  };\r\n\r\n  const showAllFiles = () => {\r\n    setVisibleFiles(files.length);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3 className=\"text-xl font-semibold mb-2\">Error Loading Files</h3>\r\n        <p className=\"text-gray-600 mb-4\">{error}</p>\r\n        <button \r\n          onClick={() => fetchFiles(currentPath)}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-explorer-header\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <button\r\n            onClick={navigateUp}\r\n            disabled={!currentPath}\r\n            className={`back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          >\r\n            <ChevronLeft size={16} />\r\n            Up\r\n          </button>\r\n          \r\n          <div className=\"flex-1 ml-4\">\r\n            <div className=\"breadcrumbs flex items-center overflow-x-auto py-1\">\r\n              <button\r\n                onClick={() => navigateToDirectory('')}\r\n                className=\"text-blue-500 hover:text-blue-700 text-sm font-medium\"\r\n              >\r\n                Root\r\n              </button>\r\n              \r\n              {breadcrumbs.map((crumb, index) => (\r\n                <React.Fragment key={index}>\r\n                  <span className=\"mx-2 text-gray-400\">/</span>\r\n                  <button\r\n                    onClick={() => navigateToDirectory(crumb.path)}\r\n                    className=\"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\"\r\n                  >\r\n                    {crumb.name}\r\n                  </button>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"path text-sm text-gray-500 truncate\">\r\n          {currentPath || 'Root directory'}\r\n        </div>\r\n        \r\n        <div className=\"recent-files-header\">\r\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\r\n            Recent Files ({files.length})\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      \r\n      {files.length === 0 ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} className=\"mx-auto mb-4 text-gray-400\" />\r\n          <h3 className=\"text-lg font-medium text-gray-600\">Empty directory</h3>\r\n          <p className=\"text-gray-500\">No files found in this location</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"file-list\">\r\n          {files.slice(0, visibleFiles).map((file) => (\r\n            <div\r\n              key={file.path}\r\n              className={`file-list-item ${file.is_directory ? 'directory' : ''}`}\r\n            >\r\n              <div className=\"file-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedFiles.has(file.path)}\r\n                  onChange={() => handleCheckboxChange(file.path)}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"file-icon-container\">\r\n                {getFileIcon(file.name, file.is_directory)}\r\n              </div>\r\n              \r\n              <div \r\n                className=\"file-main-info\"\r\n                onClick={() => handleFileClick(file)}\r\n              >\r\n                <div className=\"file-name-size\">\r\n                  <div className=\"file-name\">{file.name}</div>\r\n                  <div className=\"file-size\">{formatFileSize(file.size)}</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"file-date\">\r\n                {formatDate(file.modified_time)}\r\n              </div>\r\n              \r\n              <div className=\"file-actions\">\r\n                {!file.is_directory && canPreview(file.name) && (\r\n                  <button\r\n                    onClick={(e) => handlePreview(file, e)}\r\n                    className=\"preview-button\"\r\n                    title=\"Preview\"\r\n                  >\r\n                    <Eye size={16} />\r\n                    Preview\r\n                  </button>\r\n                )}\r\n                \r\n                {!file.is_directory && (\r\n                  <button\r\n                    onClick={(e) => handleDownload(file, e)}\r\n                    className=\"download-button\"\r\n                    title=\"Download\"\r\n                  >\r\n                    <Download size={16} />\r\n                    Download\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {visibleFiles < files.length && (\r\n            <div className=\"show-all-container\">\r\n              <button\r\n                onClick={showAllFiles}\r\n                className=\"show-all-button\"\r\n              >\r\n                Show All ({files.length - visibleFiles} more)\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <FileUpload \r\n        currentPath={currentPath}\r\n        onUploadSuccess={handleUploadSuccess}\r\n        onUploadError={handleUploadError}\r\n      />\r\n      \r\n      {uploadSuccess && (\r\n        <div className=\"upload-feedback success\">\r\n          {uploadSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {uploadError && (\r\n        <div className=\"upload-feedback error\">\r\n          {uploadError}\r\n        </div>\r\n      )}\r\n      \r\n      {showDownloadProgress && downloadSessions.length > 0 && (\r\n        <DownloadProgress \r\n          downloads={downloadSessions}\r\n          onClose={() => setShowDownloadProgress(false)}\r\n          onRemoveDownload={(sessionId) => \r\n            setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}