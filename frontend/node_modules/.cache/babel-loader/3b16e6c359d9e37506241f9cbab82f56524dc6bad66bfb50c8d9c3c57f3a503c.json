{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle, Upload, HardDrive, Clock } from 'lucide-react';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [showAllFiles, setShowAllFiles] = useState(false);\n  const [totalFilesCount, setTotalFilesCount] = useState(0);\n  const [totalStorageUsed, setTotalStorageUsed] = useState(0);\n  const [recentActivity, setRecentActivity] = useState(0);\n\n  // Default number of files to show initially\n  const DEFAULT_FILES_SHOWN = 5;\n\n  // Get client ID for downloads\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Client connected:', response.client_id);\n      } catch (error) {\n        console.error('Failed to get client ID:', error);\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n\n      // Calculate statistics\n      calculateStatistics(data.files);\n\n      // Generate breadcrumbs\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      console.error('Failed to fetch files:', err);\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const calculateStatistics = filesList => {\n    const totalFiles = filesList.length;\n    const totalSize = filesList.reduce((sum, file) => sum + (file.size || 0), 0);\n\n    // Calculate recent activity (files modified in last 7 days)\n    const sevenDaysAgo = new Date();\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n    const recentFiles = filesList.filter(file => {\n      const fileDate = new Date(file.modified_time);\n      return fileDate > sevenDaysAgo;\n    });\n    setTotalFilesCount(totalFiles);\n    setTotalStorageUsed(totalSize);\n    setRecentActivity(recentFiles.length);\n  };\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n    setShowAllFiles(false); // Reset show all when navigating\n  };\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n    setShowAllFiles(false); // Reset show all when navigating\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) {\n      navigateToDirectory(file.path);\n    } else {\n      if (onFileSelect) {\n        onFileSelect(file);\n      }\n    }\n  };\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\n    try {\n      // Start download session using API service\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\n\n      // Add to downloads list\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloadSessions(prev => [...prev, newDownload]);\n      // Immediately trigger browser download (no waiting for processing)\n      triggerBrowserDownload(newDownload.sessionId);\n\n      // Start progress tracking\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (error) {\n      console.error('Download error:', error);\n      throw error;\n    }\n  };\n  const trackDownloadProgress = async sessionId => {\n    const pollProgress = async () => {\n      try {\n        const progress = await apiService.getDownloadProgress(sessionId);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : download));\n        // Continue polling while download is active\n        if (!progress.error && !progress.is_complete) {\n          setTimeout(pollProgress, 500); // Poll every 500ms for smoother updates\n        } else if (progress.is_complete) {\n          // Mark as completed - no need to trigger another download\n          setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n        }\n      } catch (error) {\n        console.error('Progress tracking error:', error);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    pollProgress();\n  };\n  const triggerBrowserDownload = sessionId => {\n    // Update status to show download is starting\n    setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n      ...download,\n      status: 'downloading'\n    } : download));\n    // Create hidden link to trigger download - use full URL from API service\n    const link = document.createElement('a');\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    // Clean up\n    setTimeout(() => {\n      document.body.removeChild(link);\n    }, 100);\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n\n    // Try to reconnect if no client ID\n    if (!clientId) {\n      try {\n        console.log('No client ID, attempting to reconnect...');\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Reconnected with client ID:', response.client_id);\n      } catch (error) {\n        console.error('Reconnection failed:', error);\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      // Show download progress panel\n      setShowDownloadProgress(true);\n\n      // Start the Mega.nz style download directly\n      await startMegaStyleDownload(file.path, file.name, clientId);\n    } catch (err) {\n      console.error('Download failed:', err);\n      setError(err.message);\n    }\n  };\n  const handleUploadSuccess = response => {\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath); // Refresh file list\n\n    // Clear success message after 5 seconds\n    setTimeout(() => {\n      setUploadSuccess(null);\n    }, 5000);\n  };\n  const handleUploadError = error => {\n    setUploadError(error);\n    setUploadSuccess(null);\n\n    // Clear error message after 7 seconds\n    setTimeout(() => {\n      setUploadError(null);\n    }, 7000);\n  };\n\n  // Get files to display based on showAllFiles state\n  const getFilesToDisplay = () => {\n    if (showAllFiles || files.length <= DEFAULT_FILES_SHOWN) {\n      return files;\n    }\n    return files.slice(0, DEFAULT_FILES_SHOWN);\n  };\n  const shouldShowToggle = () => {\n    return files.length > DEFAULT_FILES_SHOWN;\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateUp,\n          disabled: !currentPath,\n          className: `back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), \"Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breadcrumbs flex items-center overflow-x-auto py-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigateToDirectory(''),\n              className: \"text-blue-500 hover:text-blue-700 text-sm font-medium\",\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), breadcrumbs.map((crumb, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2 text-gray-400\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigateToDirectory(crumb.path),\n                className: \"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\",\n                children: crumb.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path text-sm text-gray-500 truncate\",\n        children: currentPath || 'Root directory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-statistics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: /*#__PURE__*/_jsxDEV(File, {\n              size: 20,\n              className: \"text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: totalFilesCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: /*#__PURE__*/_jsxDEV(HardDrive, {\n              size: 20,\n              className: \"text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Storage Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatFileSize(totalStorageUsed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: /*#__PURE__*/_jsxDEV(Clock, {\n              size: 20,\n              className: \"text-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: recentActivity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48,\n        className: \"mx-auto mb-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-600\",\n        children: \"Empty directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No files found in this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-grid\",\n        children: getFilesToDisplay().map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleFileClick(file),\n          className: `file-item ${file.is_directory ? 'directory' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(File, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatDate(file.modified_time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDownload(file, e),\n            className: \"download-button modern-download\",\n            title: `Download ${file.name} with real-time metrics`,\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"download-text\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 19\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), shouldShowToggle() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-more-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAllFiles(!showAllFiles),\n          className: \"show-more-button\",\n          children: showAllFiles ? `Show Less (${files.length - DEFAULT_FILES_SHOWN} more)` : `Show All (${files.length - DEFAULT_FILES_SHOWN} more)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), showDownloadProgress && downloadSessions.length > 0 && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      downloads: downloadSessions,\n      onClose: () => setShowDownloadProgress(false),\n      onRemoveDownload: sessionId => setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"j0JF2+1svYRxOSD/sylqOqsjpSU=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","Upload","HardDrive","Clock","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","FileExplorer","onFileSelect","_s","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","showAllFiles","setShowAllFiles","totalFilesCount","setTotalFilesCount","totalStorageUsed","setTotalStorageUsed","recentActivity","setRecentActivity","DEFAULT_FILES_SHOWN","getClientId","response","connect","client_id","console","log","message","fetchFiles","path","data","listFiles","calculateStatistics","pathParts","split","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","filesList","totalFiles","totalSize","reduce","sum","file","size","sevenDaysAgo","Date","setDate","getDate","recentFiles","fileDate","modified_time","navigateToDirectory","navigateUp","pop","join","handleFileClick","is_directory","startMegaStyleDownload","filePath","fileName","sessionData","startDownloadSession","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","now","prev","triggerBrowserDownload","trackDownloadProgress","pollProgress","getDownloadProgress","map","download","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","setTimeout","link","document","createElement","baseURL","process","env","REACT_APP_API_URL","href","style","display","body","appendChild","click","removeChild","handleDownload","e","stopPropagation","handleUploadSuccess","filename","handleUploadError","getFilesToDisplay","slice","shouldShowToggle","className","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","crumb","index","title","onUploadSuccess","onUploadError","downloads","onClose","onRemoveDownload","d","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle, Upload, HardDrive, Clock } from 'lucide-react';\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n  const [showAllFiles, setShowAllFiles] = useState(false);\r\n  const [totalFilesCount, setTotalFilesCount] = useState(0);\r\n  const [totalStorageUsed, setTotalStorageUsed] = useState(0);\r\n  const [recentActivity, setRecentActivity] = useState(0);\r\n\r\n  // Default number of files to show initially\r\n  const DEFAULT_FILES_SHOWN = 5;\r\n\r\n  // Get client ID for downloads\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Client connected:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Failed to get client ID:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n      \r\n      // Calculate statistics\r\n      calculateStatistics(data.files);\r\n      \r\n      // Generate breadcrumbs\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      \r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({\r\n          name: pathParts[i],\r\n          path: accumulatedPath\r\n        });\r\n      }\r\n      \r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      console.error('Failed to fetch files:', err);\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStatistics = (filesList) => {\r\n    const totalFiles = filesList.length;\r\n    const totalSize = filesList.reduce((sum, file) => sum + (file.size || 0), 0);\r\n    \r\n    // Calculate recent activity (files modified in last 7 days)\r\n    const sevenDaysAgo = new Date();\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n    const recentFiles = filesList.filter(file => {\r\n      const fileDate = new Date(file.modified_time);\r\n      return fileDate > sevenDaysAgo;\r\n    });\r\n\r\n    setTotalFilesCount(totalFiles);\r\n    setTotalStorageUsed(totalSize);\r\n    setRecentActivity(recentFiles.length);\r\n  };\r\n\r\n  const navigateToDirectory = (path) => {\r\n    setCurrentPath(path);\r\n    setShowAllFiles(false); // Reset show all when navigating\r\n  };\r\n\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    \r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n    setShowAllFiles(false); // Reset show all when navigating\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) {\r\n      navigateToDirectory(file.path);\r\n    } else {\r\n      if (onFileSelect) {\r\n        onFileSelect(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\r\n    try {\r\n      // Start download session using API service\r\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\r\n      \r\n      // Add to downloads list\r\n      const newDownload = {\r\n        sessionId: sessionData.session_id,\r\n        fileName: sessionData.file_name,\r\n        fileSize: sessionData.file_size,\r\n        clientId: sessionData.client_id,\r\n        progress: 0,\r\n        speed: 0,\r\n        eta: 0,\r\n        status: 'starting',\r\n        startTime: Date.now()\r\n      };\r\n      setDownloadSessions(prev => [...prev, newDownload]);\r\n      // Immediately trigger browser download (no waiting for processing)\r\n      triggerBrowserDownload(newDownload.sessionId);\r\n      \r\n      // Start progress tracking\r\n      trackDownloadProgress(newDownload.sessionId);\r\n    } catch (error) {\r\n      console.error('Download error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const pollProgress = async () => {\r\n      try {\r\n        const progress = await apiService.getDownloadProgress(sessionId);\r\n        \r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? {\r\n              ...download,\r\n              progress: progress.progress_percent,\r\n              speed: progress.speed_mbps,\r\n              eta: progress.eta_seconds,\r\n              bytesTransferred: progress.bytes_transferred,\r\n              status: progress.is_complete ? 'completed' : \r\n                     progress.is_processing ? 'downloading' : 'starting'\r\n            }\r\n            : download\r\n        ));\r\n        // Continue polling while download is active\r\n        if (!progress.error && !progress.is_complete) {\r\n          setTimeout(pollProgress, 500);  // Poll every 500ms for smoother updates\r\n        } else if (progress.is_complete) {\r\n          // Mark as completed - no need to trigger another download\r\n          setDownloadSessions(prev => prev.map(download => \r\n            download.sessionId === sessionId \r\n              ? { ...download, status: 'completed' }\r\n              : download\r\n          ));\r\n        }\r\n      } catch (error) {\r\n        console.error('Progress tracking error:', error);\r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? { ...download, status: 'error', error: error.message }\r\n            : download\r\n        ));\r\n      }\r\n    };\r\n    pollProgress();\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    // Update status to show download is starting\r\n    setDownloadSessions(prev => prev.map(download => \r\n      download.sessionId === sessionId \r\n        ? { ...download, status: 'downloading' }\r\n        : download\r\n    ));\r\n    // Create hidden link to trigger download - use full URL from API service\r\n    const link = document.createElement('a');\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    // Clean up\r\n    setTimeout(() => {\r\n      document.body.removeChild(link);\r\n    }, 100);\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // Try to reconnect if no client ID\r\n    if (!clientId) {\r\n      try {\r\n        console.log('No client ID, attempting to reconnect...');\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Reconnected with client ID:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Reconnection failed:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      // Show download progress panel\r\n      setShowDownloadProgress(true);\r\n      \r\n      // Start the Mega.nz style download directly\r\n      await startMegaStyleDownload(file.path, file.name, clientId);\r\n    } catch (err) {\r\n      console.error('Download failed:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (response) => {\r\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath); // Refresh file list\r\n    \r\n    // Clear success message after 5 seconds\r\n    setTimeout(() => {\r\n      setUploadSuccess(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleUploadError = (error) => {\r\n    setUploadError(error);\r\n    setUploadSuccess(null);\r\n    \r\n    // Clear error message after 7 seconds\r\n    setTimeout(() => {\r\n      setUploadError(null);\r\n    }, 7000);\r\n  };\r\n\r\n  // Get files to display based on showAllFiles state\r\n  const getFilesToDisplay = () => {\r\n    if (showAllFiles || files.length <= DEFAULT_FILES_SHOWN) {\r\n      return files;\r\n    }\r\n    return files.slice(0, DEFAULT_FILES_SHOWN);\r\n  };\r\n\r\n  const shouldShowToggle = () => {\r\n    return files.length > DEFAULT_FILES_SHOWN;\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3 className=\"text-xl font-semibold mb-2\">Error Loading Files</h3>\r\n        <p className=\"text-gray-600 mb-4\">{error}</p>\r\n        <button \r\n          onClick={() => fetchFiles(currentPath)}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-explorer-header\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <button\r\n            onClick={navigateUp}\r\n            disabled={!currentPath}\r\n            className={`back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          >\r\n            <ChevronLeft size={16} />\r\n            Up\r\n          </button>\r\n          \r\n          <div className=\"flex-1 ml-4\">\r\n            <div className=\"breadcrumbs flex items-center overflow-x-auto py-1\">\r\n              <button\r\n                onClick={() => navigateToDirectory('')}\r\n                className=\"text-blue-500 hover:text-blue-700 text-sm font-medium\"\r\n              >\r\n                Root\r\n              </button>\r\n              \r\n              {breadcrumbs.map((crumb, index) => (\r\n                <React.Fragment key={index}>\r\n                  <span className=\"mx-2 text-gray-400\">/</span>\r\n                  <button\r\n                    onClick={() => navigateToDirectory(crumb.path)}\r\n                    className=\"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\"\r\n                  >\r\n                    {crumb.name}\r\n                  </button>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"path text-sm text-gray-500 truncate\">\r\n          {currentPath || 'Root directory'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* File Statistics Section */}\r\n      <div className=\"file-statistics\">\r\n        <div className=\"statistics-grid\">\r\n          <div className=\"stat-item\">\r\n            <div className=\"stat-icon\">\r\n              <File size={20} className=\"text-blue-500\" />\r\n            </div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-label\">Total Files</div>\r\n              <div className=\"stat-value\">{totalFilesCount}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"stat-item\">\r\n            <div className=\"stat-icon\">\r\n              <HardDrive size={20} className=\"text-green-500\" />\r\n            </div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-label\">Storage Used</div>\r\n              <div className=\"stat-value\">{formatFileSize(totalStorageUsed)}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"stat-item\">\r\n            <div className=\"stat-icon\">\r\n              <Clock size={20} className=\"text-purple-500\" />\r\n            </div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-label\">Recent Activity</div>\r\n              <div className=\"stat-value\">{recentActivity}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {files.length === 0 ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} className=\"mx-auto mb-4 text-gray-400\" />\r\n          <h3 className=\"text-lg font-medium text-gray-600\">Empty directory</h3>\r\n          <p className=\"text-gray-500\">No files found in this location</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"file-grid\">\r\n            {getFilesToDisplay().map((file) => (\r\n              <div\r\n                key={file.path}\r\n                onClick={() => handleFileClick(file)}\r\n                className={`file-item ${file.is_directory ? 'directory' : ''}`}\r\n              >\r\n                <div className=\"file-icon\">\r\n                  {file.is_directory ? (\r\n                    <Folder size={24} />\r\n                  ) : (\r\n                    <File size={24} />\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"file-info\">\r\n                  <div className=\"file-name\">{file.name}</div>\r\n                  <div className=\"file-details\">\r\n                    <span>{formatFileSize(file.size)}</span>\r\n                    <span>{formatDate(file.modified_time)}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {!file.is_directory && (\r\n                  <button\r\n                    onClick={(e) => handleDownload(file, e)}\r\n                    className=\"download-button modern-download\"\r\n                    title={`Download ${file.name} with real-time metrics`}\r\n                  >\r\n                    <Download size={16} />\r\n                    <span className=\"download-text\">Download</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Show More/Show Less Button */}\r\n          {shouldShowToggle() && (\r\n            <div className=\"show-more-container\">\r\n              <button\r\n                onClick={() => setShowAllFiles(!showAllFiles)}\r\n                className=\"show-more-button\"\r\n              >\r\n                {showAllFiles ? \r\n                  `Show Less (${files.length - DEFAULT_FILES_SHOWN} more)` : \r\n                  `Show All (${files.length - DEFAULT_FILES_SHOWN} more)`\r\n                }\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <FileUpload \r\n        currentPath={currentPath}\r\n        onUploadSuccess={handleUploadSuccess}\r\n        onUploadError={handleUploadError}\r\n      />\r\n      \r\n      {uploadSuccess && (\r\n        <div className=\"upload-feedback success\">\r\n          {uploadSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {uploadError && (\r\n        <div className=\"upload-feedback error\">\r\n          {uploadError}\r\n        </div>\r\n      )}\r\n      \r\n      {showDownloadProgress && downloadSessions.length > 0 && (\r\n        <DownloadProgress \r\n          downloads={downloadSessions}\r\n          onClose={() => setShowDownloadProgress(false)}\r\n          onRemoveDownload={(sessionId) => \r\n            setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,QAAQ,cAAc;AAClH,SAASC,cAAc,EAAEC,UAAU,QAAQ,wBAAwB;AACnE,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACiD,cAAc,EAAEC,iBAAiB,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMmD,mBAAmB,GAAG,CAAC;;EAE7B;EACAlD,SAAS,CAAC,MAAM;IACd,MAAMmD,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxC,UAAU,CAACyC,OAAO,CAAC,CAAC;QAC3CZ,WAAW,CAACW,QAAQ,CAACE,SAAS,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACE,SAAS,CAAC;MACtD,CAAC,CAAC,OAAO1B,KAAK,EAAE;QACd2B,OAAO,CAAC3B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAAC,sBAAsBD,KAAK,CAAC6B,OAAO,EAAE,CAAC;MACjD;IACF,CAAC;IACDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENnD,SAAS,CAAC,MAAM;IACd0D,UAAU,CAACpC,WAAW,CAAC;EACzB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMoC,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI;MACFhC,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM+B,IAAI,GAAG,MAAMhD,UAAU,CAACiD,SAAS,CAACF,IAAI,CAAC;MAC7ClC,QAAQ,CAACmC,IAAI,CAACpC,KAAK,CAAC;;MAEpB;MACAsC,mBAAmB,CAACF,IAAI,CAACpC,KAAK,CAAC;;MAE/B;MACA,MAAMuC,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MACjD,MAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,eAAe,GAAG,EAAE;MAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;QACzCD,eAAe,IAAI,CAACC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIN,SAAS,CAACM,CAAC,CAAC;QACpDF,MAAM,CAACI,IAAI,CAAC;UACVC,IAAI,EAAET,SAAS,CAACM,CAAC,CAAC;UAClBV,IAAI,EAAES;QACR,CAAC,CAAC;MACJ;MAEArC,cAAc,CAACoC,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZlB,OAAO,CAAC3B,KAAK,CAAC,wBAAwB,EAAE6C,GAAG,CAAC;MAC5C5C,QAAQ,CAAC4C,GAAG,CAAChB,OAAO,CAAC;MACrBhC,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmC,mBAAmB,GAAIY,SAAS,IAAK;IACzC,MAAMC,UAAU,GAAGD,SAAS,CAACJ,MAAM;IACnC,MAAMM,SAAS,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIC,IAAI,CAACC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;IAE5E;IACA,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC/BD,YAAY,CAACE,OAAO,CAACF,YAAY,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD,MAAMC,WAAW,GAAGX,SAAS,CAACT,MAAM,CAACc,IAAI,IAAI;MAC3C,MAAMO,QAAQ,GAAG,IAAIJ,IAAI,CAACH,IAAI,CAACQ,aAAa,CAAC;MAC7C,OAAOD,QAAQ,GAAGL,YAAY;IAChC,CAAC,CAAC;IAEFpC,kBAAkB,CAAC8B,UAAU,CAAC;IAC9B5B,mBAAmB,CAAC6B,SAAS,CAAC;IAC9B3B,iBAAiB,CAACoC,WAAW,CAACf,MAAM,CAAC;EACvC,CAAC;EAED,MAAMkB,mBAAmB,GAAI7B,IAAI,IAAK;IACpCpC,cAAc,CAACoC,IAAI,CAAC;IACpBhB,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAM8C,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACnE,WAAW,EAAE;IAElB,MAAMyC,SAAS,GAAGzC,WAAW,CAAC0C,KAAK,CAAC,GAAG,CAAC;IACxCD,SAAS,CAAC2B,GAAG,CAAC,CAAC;IACfnE,cAAc,CAACwC,SAAS,CAAC4B,IAAI,CAAC,GAAG,CAAC,CAAC;IACnChD,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMiD,eAAe,GAAIb,IAAI,IAAK;IAChC,IAAIA,IAAI,CAACc,YAAY,EAAE;MACrBL,mBAAmB,CAACT,IAAI,CAACpB,IAAI,CAAC;IAChC,CAAC,MAAM;MACL,IAAIvC,YAAY,EAAE;QAChBA,YAAY,CAAC2D,IAAI,CAAC;MACpB;IACF;EACF,CAAC;EAED,MAAMe,sBAAsB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAExD,QAAQ,KAAK;IACrE,IAAI;MACF;MACA,MAAMyD,WAAW,GAAG,MAAMrF,UAAU,CAACsF,oBAAoB,CAACH,QAAQ,EAAEvD,QAAQ,CAAC;;MAE7E;MACA,MAAM2D,WAAW,GAAG;QAClBC,SAAS,EAAEH,WAAW,CAACI,UAAU;QACjCL,QAAQ,EAAEC,WAAW,CAACK,SAAS;QAC/BC,QAAQ,EAAEN,WAAW,CAACO,SAAS;QAC/BhE,QAAQ,EAAEyD,WAAW,CAAC3C,SAAS;QAC/BmD,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE,UAAU;QAClBC,SAAS,EAAE3B,IAAI,CAAC4B,GAAG,CAAC;MACtB,CAAC;MACDzE,mBAAmB,CAAC0E,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEZ,WAAW,CAAC,CAAC;MACnD;MACAa,sBAAsB,CAACb,WAAW,CAACC,SAAS,CAAC;;MAE7C;MACAa,qBAAqB,CAACd,WAAW,CAACC,SAAS,CAAC;IAC9C,CAAC,CAAC,OAAOxE,KAAK,EAAE;MACd2B,OAAO,CAAC3B,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMqF,qBAAqB,GAAG,MAAOb,SAAS,IAAK;IACjD,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAM7F,UAAU,CAACuG,mBAAmB,CAACf,SAAS,CAAC;QAEhE/D,mBAAmB,CAAC0E,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAACjB,SAAS,KAAKA,SAAS,GAC5B;UACA,GAAGiB,QAAQ;UACXZ,QAAQ,EAAEA,QAAQ,CAACa,gBAAgB;UACnCZ,KAAK,EAAED,QAAQ,CAACc,UAAU;UAC1BZ,GAAG,EAAEF,QAAQ,CAACe,WAAW;UACzBC,gBAAgB,EAAEhB,QAAQ,CAACiB,iBAAiB;UAC5Cd,MAAM,EAAEH,QAAQ,CAACkB,WAAW,GAAG,WAAW,GACnClB,QAAQ,CAACmB,aAAa,GAAG,aAAa,GAAG;QAClD,CAAC,GACCP,QACN,CAAC,CAAC;QACF;QACA,IAAI,CAACZ,QAAQ,CAAC7E,KAAK,IAAI,CAAC6E,QAAQ,CAACkB,WAAW,EAAE;UAC5CE,UAAU,CAACX,YAAY,EAAE,GAAG,CAAC,CAAC,CAAE;QAClC,CAAC,MAAM,IAAIT,QAAQ,CAACkB,WAAW,EAAE;UAC/B;UACAtF,mBAAmB,CAAC0E,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAACjB,SAAS,KAAKA,SAAS,GAC5B;YAAE,GAAGiB,QAAQ;YAAET,MAAM,EAAE;UAAY,CAAC,GACpCS,QACN,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOzF,KAAK,EAAE;QACd2B,OAAO,CAAC3B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDS,mBAAmB,CAAC0E,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAACjB,SAAS,KAAKA,SAAS,GAC5B;UAAE,GAAGiB,QAAQ;UAAET,MAAM,EAAE,OAAO;UAAEhF,KAAK,EAAEA,KAAK,CAAC6B;QAAQ,CAAC,GACtD4D,QACN,CAAC,CAAC;MACJ;IACF,CAAC;IACDH,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMF,sBAAsB,GAAIZ,SAAS,IAAK;IAC5C;IACA/D,mBAAmB,CAAC0E,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAACjB,SAAS,KAAKA,SAAS,GAC5B;MAAE,GAAGiB,QAAQ;MAAET,MAAM,EAAE;IAAc,CAAC,GACtCS,QACN,CAAC,CAAC;IACF;IACA,MAAMS,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;IAC5EN,IAAI,CAACO,IAAI,GAAG,GAAGJ,OAAO,6BAA6B7B,SAAS,EAAE;IAC9D0B,IAAI,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3BR,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,IAAI,CAAC;IAC/BA,IAAI,CAACY,KAAK,CAAC,CAAC;IACZ;IACAb,UAAU,CAAC,MAAM;MACfE,QAAQ,CAACS,IAAI,CAACG,WAAW,CAACb,IAAI,CAAC;IACjC,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMc,cAAc,GAAG,MAAAA,CAAO7D,IAAI,EAAE8D,CAAC,KAAK;IACxCA,CAAC,CAACC,eAAe,CAAC,CAAC;;IAEnB;IACA,IAAI,CAACtG,QAAQ,EAAE;MACb,IAAI;QACFe,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD,MAAMJ,QAAQ,GAAG,MAAMxC,UAAU,CAACyC,OAAO,CAAC,CAAC;QAC3CZ,WAAW,CAACW,QAAQ,CAACE,SAAS,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,QAAQ,CAACE,SAAS,CAAC;MAChE,CAAC,CAAC,OAAO1B,KAAK,EAAE;QACd2B,OAAO,CAAC3B,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,sBAAsBD,KAAK,CAAC6B,OAAO,EAAE,CAAC;QAC/C;MACF;IACF;IACA,IAAI;MACF;MACAlB,uBAAuB,CAAC,IAAI,CAAC;;MAE7B;MACA,MAAMuD,sBAAsB,CAACf,IAAI,CAACpB,IAAI,EAAEoB,IAAI,CAACP,IAAI,EAAEhC,QAAQ,CAAC;IAC9D,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZlB,OAAO,CAAC3B,KAAK,CAAC,kBAAkB,EAAE6C,GAAG,CAAC;MACtC5C,QAAQ,CAAC4C,GAAG,CAAChB,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMsF,mBAAmB,GAAI3F,QAAQ,IAAK;IACxCnB,gBAAgB,CAAC,yBAAyBmB,QAAQ,CAAC4F,QAAQ,EAAE,CAAC;IAC9D7G,cAAc,CAAC,IAAI,CAAC;IACpBuB,UAAU,CAACpC,WAAW,CAAC,CAAC,CAAC;;IAEzB;IACAuG,UAAU,CAAC,MAAM;MACf5F,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMgH,iBAAiB,GAAIrH,KAAK,IAAK;IACnCO,cAAc,CAACP,KAAK,CAAC;IACrBK,gBAAgB,CAAC,IAAI,CAAC;;IAEtB;IACA4F,UAAU,CAAC,MAAM;MACf1F,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAM+G,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIxG,YAAY,IAAIlB,KAAK,CAAC8C,MAAM,IAAIpB,mBAAmB,EAAE;MACvD,OAAO1B,KAAK;IACd;IACA,OAAOA,KAAK,CAAC2H,KAAK,CAAC,CAAC,EAAEjG,mBAAmB,CAAC;EAC5C,CAAC;EAED,MAAMkG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAO5H,KAAK,CAAC8C,MAAM,GAAGpB,mBAAmB;EAC3C,CAAC;EAED,IAAItB,KAAK,EAAE;IACT,oBACEZ,OAAA;MAAKqI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCtI,OAAA,CAACV,WAAW;QAAC0E,IAAI,EAAE,EAAG;QAACqE,SAAS,EAAC;MAAmB;QAAArD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDzI,OAAA;QAAIqI,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAmB;QAAAtD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEzI,OAAA;QAAGqI,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAE1H;MAAK;QAAAoE,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CzI,OAAA;QACE0I,OAAO,EAAEA,CAAA,KAAMhG,UAAU,CAACpC,WAAW,CAAE;QACvC+H,SAAS,EAAC,uEAAuE;QAAAC,QAAA,EAClF;MAED;QAAAtD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAzD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,IAAI/H,SAAS,EAAE;IACb,oBACEV,OAAA;MAAKqI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCtI,OAAA,CAACX,OAAO;QAAC2E,IAAI,EAAE,EAAG;QAACqE,SAAS,EAAC;MAAiC;QAAArD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEzI,OAAA;QAAAsI,QAAA,EAAG;MAAgB;QAAAtD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAzD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;EAEA,oBACEzI,OAAA;IAAKqI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtI,OAAA;MAAKqI,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCtI,OAAA;QAAKqI,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDtI,OAAA;UACE0I,OAAO,EAAEjE,UAAW;UACpBkE,QAAQ,EAAE,CAACrI,WAAY;UACvB+H,SAAS,EAAE,eAAe,CAAC/H,WAAW,GAAG,+BAA+B,GAAG,EAAE,EAAG;UAAAgI,QAAA,gBAEhFtI,OAAA,CAACb,WAAW;YAAC6E,IAAI,EAAE;UAAG;YAAAgB,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,MAE3B;QAAA;UAAAzD,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETzI,OAAA;UAAKqI,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BtI,OAAA;YAAKqI,SAAS,EAAC,oDAAoD;YAAAC,QAAA,gBACjEtI,OAAA;cACE0I,OAAO,EAAEA,CAAA,KAAMlE,mBAAmB,CAAC,EAAE,CAAE;cACvC6D,SAAS,EAAC,uDAAuD;cAAAC,QAAA,EAClE;YAED;cAAAtD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAER3H,WAAW,CAACsF,GAAG,CAAC,CAACwC,KAAK,EAAEC,KAAK,kBAC5B7I,OAAA,CAAClB,KAAK,CAACmB,QAAQ;cAAAqI,QAAA,gBACbtI,OAAA;gBAAMqI,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAtD,QAAA,EAAAuD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7CzI,OAAA;gBACE0I,OAAO,EAAEA,CAAA,KAAMlE,mBAAmB,CAACoE,KAAK,CAACjG,IAAI,CAAE;gBAC/C0F,SAAS,EAAC,yEAAyE;gBAAAC,QAAA,EAElFM,KAAK,CAACpF;cAAI;gBAAAwB,QAAA,EAAAuD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,GAPUI,KAAK;cAAA7D,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACjB,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAzD,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAzD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzI,OAAA;QAAKqI,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EACjDhI,WAAW,IAAI;MAAgB;QAAA0E,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAzD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzI,OAAA;MAAKqI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BtI,OAAA;QAAKqI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BtI,OAAA;UAAKqI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtI,OAAA;YAAKqI,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBtI,OAAA,CAACd,IAAI;cAAC8E,IAAI,EAAE,EAAG;cAACqE,SAAS,EAAC;YAAe;cAAArD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACNzI,OAAA;YAAKqI,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BtI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAW;cAAAtD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7CzI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE1G;YAAe;cAAAoD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA;UAAAzD,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzI,OAAA;UAAKqI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtI,OAAA;YAAKqI,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBtI,OAAA,CAACR,SAAS;cAACwE,IAAI,EAAE,EAAG;cAACqE,SAAS,EAAC;YAAgB;cAAArD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACNzI,OAAA;YAAKqI,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BtI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAtD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9CzI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE5I,cAAc,CAACoC,gBAAgB;YAAC;cAAAkD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC;QAAA;UAAAzD,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzI,OAAA;UAAKqI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtI,OAAA;YAAKqI,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBtI,OAAA,CAACP,KAAK;cAACuE,IAAI,EAAE,EAAG;cAACqE,SAAS,EAAC;YAAiB;cAAArD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACNzI,OAAA;YAAKqI,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BtI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAe;cAAAtD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjDzI,OAAA;cAAKqI,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEtG;YAAc;cAAAgD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAzD,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAzD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAzD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELjI,KAAK,CAAC8C,MAAM,KAAK,CAAC,gBACjBtD,OAAA;MAAKqI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BtI,OAAA,CAACf,MAAM;QAAC+E,IAAI,EAAE,EAAG;QAACqE,SAAS,EAAC;MAA4B;QAAArD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DzI,OAAA;QAAIqI,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAAe;QAAAtD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtEzI,OAAA;QAAGqI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAA+B;QAAAtD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAzD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,gBAENzI,OAAA,CAAAE,SAAA;MAAAoI,QAAA,gBACEtI,OAAA;QAAKqI,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBJ,iBAAiB,CAAC,CAAC,CAAC9B,GAAG,CAAErC,IAAI,iBAC5B/D,OAAA;UAEE0I,OAAO,EAAEA,CAAA,KAAM9D,eAAe,CAACb,IAAI,CAAE;UACrCsE,SAAS,EAAE,aAAatE,IAAI,CAACc,YAAY,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAyD,QAAA,gBAE/DtI,OAAA;YAAKqI,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBvE,IAAI,CAACc,YAAY,gBAChB7E,OAAA,CAACf,MAAM;cAAC+E,IAAI,EAAE;YAAG;cAAAgB,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEpBzI,OAAA,CAACd,IAAI;cAAC8E,IAAI,EAAE;YAAG;cAAAgB,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAClB;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENzI,OAAA;YAAKqI,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBtI,OAAA;cAAKqI,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEvE,IAAI,CAACP;YAAI;cAAAwB,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5CzI,OAAA;cAAKqI,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BtI,OAAA;gBAAAsI,QAAA,EAAO5I,cAAc,CAACqE,IAAI,CAACC,IAAI;cAAC;gBAAAgB,QAAA,EAAAuD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxCzI,OAAA;gBAAAsI,QAAA,EAAO3I,UAAU,CAACoE,IAAI,CAACQ,aAAa;cAAC;gBAAAS,QAAA,EAAAuD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAzD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL,CAAC1E,IAAI,CAACc,YAAY,iBACjB7E,OAAA;YACE0I,OAAO,EAAGb,CAAC,IAAKD,cAAc,CAAC7D,IAAI,EAAE8D,CAAC,CAAE;YACxCQ,SAAS,EAAC,iCAAiC;YAC3CS,KAAK,EAAE,YAAY/E,IAAI,CAACP,IAAI,yBAA0B;YAAA8E,QAAA,gBAEtDtI,OAAA,CAACZ,QAAQ;cAAC4E,IAAI,EAAE;YAAG;cAAAgB,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtBzI,OAAA;cAAMqI,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAQ;cAAAtD,QAAA,EAAAuD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAzD,QAAA,EAAAuD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CACT;QAAA,GA7BI1E,IAAI,CAACpB,IAAI;UAAAqC,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8BX,CACN;MAAC;QAAAzD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLL,gBAAgB,CAAC,CAAC,iBACjBpI,OAAA;QAAKqI,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCtI,OAAA;UACE0I,OAAO,EAAEA,CAAA,KAAM/G,eAAe,CAAC,CAACD,YAAY,CAAE;UAC9C2G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAE3B5G,YAAY,GACX,cAAclB,KAAK,CAAC8C,MAAM,GAAGpB,mBAAmB,QAAQ,GACxD,aAAa1B,KAAK,CAAC8C,MAAM,GAAGpB,mBAAmB;QAAQ;UAAA8C,QAAA,EAAAuD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnD;MAAC;QAAAzD,QAAA,EAAAuD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA,eACD,CACH,eAEDzI,OAAA,CAACH,UAAU;MACTS,WAAW,EAAEA,WAAY;MACzByI,eAAe,EAAEhB,mBAAoB;MACrCiB,aAAa,EAAEf;IAAkB;MAAAjD,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAEDzH,aAAa,iBACZhB,OAAA;MAAKqI,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCtH;IAAa;MAAAgE,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACN,EAEAvH,WAAW,iBACVlB,OAAA;MAAKqI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCpH;IAAW;MAAA8D,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACN,EAEAnH,oBAAoB,IAAIF,gBAAgB,CAACkC,MAAM,GAAG,CAAC,iBAClDtD,OAAA,CAACF,gBAAgB;MACfmJ,SAAS,EAAE7H,gBAAiB;MAC5B8H,OAAO,EAAEA,CAAA,KAAM3H,uBAAuB,CAAC,KAAK,CAAE;MAC9C4H,gBAAgB,EAAG/D,SAAS,IAC1B/D,mBAAmB,CAAC0E,IAAI,IAAIA,IAAI,CAAC9C,MAAM,CAACmG,CAAC,IAAIA,CAAC,CAAChE,SAAS,KAAKA,SAAS,CAAC;IACxE;MAAAJ,QAAA,EAAAuD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACF;EAAA;IAAAzD,QAAA,EAAAuD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpI,EAAA,CAzcIF,YAAY;AAAAkJ,EAAA,GAAZlJ,YAAY;AA2clB,eAAeA,YAAY;AAAC,IAAAkJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}