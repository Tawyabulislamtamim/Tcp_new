{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamov\\\\Desktop\\\\Net\\\\New folder\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n\n  // Get client ID for downloads\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Client connected:', response.client_id);\n      } catch (error) {\n        console.error('Failed to get client ID:', error);\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n\n      // Generate breadcrumbs\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      console.error('Failed to fetch files:', err);\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n  };\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) {\n      navigateToDirectory(file.path);\n    } else {\n      if (onFileSelect) {\n        onFileSelect(file);\n      }\n    }\n  };\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\n    try {\n      // Start download session\n      const response = await fetch('/api/transfer/start-download', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          path: filePath,\n          client_id: clientId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to start download');\n      }\n      const sessionData = await response.json();\n\n      // Add to downloads list\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloadSessions(prev => [...prev, newDownload]);\n\n      // Start progress tracking\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (error) {\n      console.error('Download error:', error);\n      throw error;\n    }\n  };\n  const trackDownloadProgress = async sessionId => {\n    const pollProgress = async () => {\n      try {\n        const response = await fetch(`/api/transfer/download-progress/${sessionId}`);\n        if (!response.ok) return;\n        const progress = await response.json();\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : download));\n\n        // If complete and ready for download, trigger browser download\n        if (progress.is_complete && progress.is_ready_for_download) {\n          triggerBrowserDownload(sessionId);\n        } else if (!progress.error && !progress.is_complete) {\n          // Continue polling\n          setTimeout(pollProgress, 250);\n        }\n      } catch (error) {\n        console.error('Progress tracking error:', error);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    pollProgress();\n  };\n  const triggerBrowserDownload = sessionId => {\n    // Update status to show browser download is starting\n    setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n      ...download,\n      status: 'browser-downloading'\n    } : download));\n\n    // Create hidden link to trigger download\n    const link = document.createElement('a');\n    link.href = `/api/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up and update status\n    setTimeout(() => {\n      document.body.removeChild(link);\n      setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n        ...download,\n        status: 'saved'\n      } : download));\n    }, 1000);\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n\n    // Try to reconnect if no client ID\n    if (!clientId) {\n      try {\n        console.log('No client ID, attempting to reconnect...');\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Reconnected with client ID:', response.client_id);\n      } catch (error) {\n        console.error('Reconnection failed:', error);\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      // Show download progress panel\n      setShowDownloadProgress(true);\n\n      // Start the Mega.nz style download directly\n      await startMegaStyleDownload(file.path, file.name, clientId);\n    } catch (err) {\n      console.error('Download failed:', err);\n      setError(err.message);\n    }\n  };\n  const handleUploadSuccess = response => {\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath); // Refresh file list\n\n    // Clear success message after 5 seconds\n    setTimeout(() => {\n      setUploadSuccess(null);\n    }, 5000);\n  };\n  const handleUploadError = error => {\n    setUploadError(error);\n    setUploadSuccess(null);\n\n    // Clear error message after 7 seconds\n    setTimeout(() => {\n      setUploadError(null);\n    }, 7000);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateUp,\n          disabled: !currentPath,\n          className: `back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), \"Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breadcrumbs flex items-center overflow-x-auto py-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigateToDirectory(''),\n              className: \"text-blue-500 hover:text-blue-700 text-sm font-medium\",\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), breadcrumbs.map((crumb, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mx-2 text-gray-400\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigateToDirectory(crumb.path),\n                className: \"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\",\n                children: crumb.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path text-sm text-gray-500 truncate\",\n        children: currentPath || 'Root directory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48,\n        className: \"mx-auto mb-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-600\",\n        children: \"Empty directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No files found in this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-grid\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleFileClick(file),\n        className: `file-item ${file.is_directory ? 'directory' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(File, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(file.modified_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleDownload(file, e),\n          className: \"download-button modern-download\",\n          title: `Download ${file.name} with real-time metrics`,\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"download-text\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this)]\n      }, file.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this), showDownloadProgress && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      onClose: () => setShowDownloadProgress(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"VaYLfcWjmnmKjWuC8T7bUJ/EaHQ=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","getClientId","response","connect","client_id","console","log","message","fetchFiles","path","data","listFiles","pathParts","split","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","navigateToDirectory","navigateUp","pop","join","handleFileClick","file","is_directory","startMegaStyleDownload","filePath","fileName","fetch","method","headers","body","JSON","stringify","ok","Error","sessionData","json","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","prev","trackDownloadProgress","pollProgress","map","download","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","is_ready_for_download","triggerBrowserDownload","setTimeout","link","document","createElement","href","style","display","appendChild","click","removeChild","handleDownload","e","stopPropagation","handleUploadSuccess","filename","handleUploadError","className","children","size","_jsxFileName","lineNumber","columnNumber","onClick","disabled","crumb","index","Fragment","modified_time","title","onUploadSuccess","onUploadError","onClose","_c","$RefreshReg$"],"sources":["C:/Users/iamov/Desktop/Net/New folder/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n\r\n  // Get client ID for downloads\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Client connected:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Failed to get client ID:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n      \r\n      // Generate breadcrumbs\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      \r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({\r\n          name: pathParts[i],\r\n          path: accumulatedPath\r\n        });\r\n      }\r\n      \r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      console.error('Failed to fetch files:', err);\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateToDirectory = (path) => {\r\n    setCurrentPath(path);\r\n  };\r\n\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    \r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) {\r\n      navigateToDirectory(file.path);\r\n    } else {\r\n      if (onFileSelect) {\r\n        onFileSelect(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\r\n    try {\r\n      // Start download session\r\n      const response = await fetch('/api/transfer/start-download', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          path: filePath,\r\n          client_id: clientId\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to start download');\r\n      }\r\n\r\n      const sessionData = await response.json();\r\n      \r\n      // Add to downloads list\r\n      const newDownload = {\r\n        sessionId: sessionData.session_id,\r\n        fileName: sessionData.file_name,\r\n        fileSize: sessionData.file_size,\r\n        clientId: sessionData.client_id,\r\n        progress: 0,\r\n        speed: 0,\r\n        eta: 0,\r\n        status: 'starting',\r\n        startTime: Date.now()\r\n      };\r\n\r\n      setDownloadSessions(prev => [...prev, newDownload]);\r\n\r\n      // Start progress tracking\r\n      trackDownloadProgress(newDownload.sessionId);\r\n\r\n    } catch (error) {\r\n      console.error('Download error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const pollProgress = async () => {\r\n      try {\r\n        const response = await fetch(`/api/transfer/download-progress/${sessionId}`);\r\n        if (!response.ok) return;\r\n\r\n        const progress = await response.json();\r\n        \r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? {\r\n              ...download,\r\n              progress: progress.progress_percent,\r\n              speed: progress.speed_mbps,\r\n              eta: progress.eta_seconds,\r\n              bytesTransferred: progress.bytes_transferred,\r\n              status: progress.is_complete ? 'completed' : \r\n                     progress.is_processing ? 'downloading' : 'starting'\r\n            }\r\n            : download\r\n        ));\r\n\r\n        // If complete and ready for download, trigger browser download\r\n        if (progress.is_complete && progress.is_ready_for_download) {\r\n          triggerBrowserDownload(sessionId);\r\n        } else if (!progress.error && !progress.is_complete) {\r\n          // Continue polling\r\n          setTimeout(pollProgress, 250);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Progress tracking error:', error);\r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? { ...download, status: 'error', error: error.message }\r\n            : download\r\n        ));\r\n      }\r\n    };\r\n\r\n    pollProgress();\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    // Update status to show browser download is starting\r\n    setDownloadSessions(prev => prev.map(download => \r\n      download.sessionId === sessionId \r\n        ? { ...download, status: 'browser-downloading' }\r\n        : download\r\n    ));\r\n\r\n    // Create hidden link to trigger download\r\n    const link = document.createElement('a');\r\n    link.href = `/api/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // Clean up and update status\r\n    setTimeout(() => {\r\n      document.body.removeChild(link);\r\n      setDownloadSessions(prev => prev.map(download => \r\n        download.sessionId === sessionId \r\n          ? { ...download, status: 'saved' }\r\n          : download\r\n      ));\r\n    }, 1000);\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // Try to reconnect if no client ID\r\n    if (!clientId) {\r\n      try {\r\n        console.log('No client ID, attempting to reconnect...');\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Reconnected with client ID:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Reconnection failed:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      // Show download progress panel\r\n      setShowDownloadProgress(true);\r\n      \r\n      // Start the Mega.nz style download directly\r\n      await startMegaStyleDownload(file.path, file.name, clientId);\r\n    } catch (err) {\r\n      console.error('Download failed:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (response) => {\r\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath); // Refresh file list\r\n    \r\n    // Clear success message after 5 seconds\r\n    setTimeout(() => {\r\n      setUploadSuccess(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleUploadError = (error) => {\r\n    setUploadError(error);\r\n    setUploadSuccess(null);\r\n    \r\n    // Clear error message after 7 seconds\r\n    setTimeout(() => {\r\n      setUploadError(null);\r\n    }, 7000);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3 className=\"text-xl font-semibold mb-2\">Error Loading Files</h3>\r\n        <p className=\"text-gray-600 mb-4\">{error}</p>\r\n        <button \r\n          onClick={() => fetchFiles(currentPath)}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-explorer-header\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <button\r\n            onClick={navigateUp}\r\n            disabled={!currentPath}\r\n            className={`back-button ${!currentPath ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n          >\r\n            <ChevronLeft size={16} />\r\n            Up\r\n          </button>\r\n          \r\n          <div className=\"flex-1 ml-4\">\r\n            <div className=\"breadcrumbs flex items-center overflow-x-auto py-1\">\r\n              <button\r\n                onClick={() => navigateToDirectory('')}\r\n                className=\"text-blue-500 hover:text-blue-700 text-sm font-medium\"\r\n              >\r\n                Root\r\n              </button>\r\n              \r\n              {breadcrumbs.map((crumb, index) => (\r\n                <React.Fragment key={index}>\r\n                  <span className=\"mx-2 text-gray-400\">/</span>\r\n                  <button\r\n                    onClick={() => navigateToDirectory(crumb.path)}\r\n                    className=\"text-blue-500 hover:text-blue-700 text-sm font-medium whitespace-nowrap\"\r\n                  >\r\n                    {crumb.name}\r\n                  </button>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"path text-sm text-gray-500 truncate\">\r\n          {currentPath || 'Root directory'}\r\n        </div>\r\n      </div>\r\n      \r\n      {files.length === 0 ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} className=\"mx-auto mb-4 text-gray-400\" />\r\n          <h3 className=\"text-lg font-medium text-gray-600\">Empty directory</h3>\r\n          <p className=\"text-gray-500\">No files found in this location</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"file-grid\">\r\n          {files.map((file) => (\r\n            <div\r\n              key={file.path}\r\n              onClick={() => handleFileClick(file)}\r\n              className={`file-item ${file.is_directory ? 'directory' : ''}`}\r\n            >\r\n              <div className=\"file-icon\">\r\n                {file.is_directory ? (\r\n                  <Folder size={24} />\r\n                ) : (\r\n                  <File size={24} />\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"file-info\">\r\n                <div className=\"file-name\">{file.name}</div>\r\n                <div className=\"file-details\">\r\n                  <span>{formatFileSize(file.size)}</span>\r\n                  <span>{formatDate(file.modified_time)}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              {!file.is_directory && (\r\n                <button\r\n                  onClick={(e) => handleDownload(file, e)}\r\n                  className=\"download-button modern-download\"\r\n                  title={`Download ${file.name} with real-time metrics`}\r\n                >\r\n                  <Download size={16} />\r\n                  <span className=\"download-text\">Download</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <FileUpload \r\n        currentPath={currentPath}\r\n        onUploadSuccess={handleUploadSuccess}\r\n        onUploadError={handleUploadError}\r\n      />\r\n      \r\n      {uploadSuccess && (\r\n        <div className=\"upload-feedback success\">\r\n          {uploadSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {uploadError && (\r\n        <div className=\"upload-feedback error\">\r\n          {uploadError}\r\n        </div>\r\n      )}\r\n      \r\n      {showDownloadProgress && (\r\n        <DownloadProgress onClose={() => setShowDownloadProgress(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,QAAQ,cAAc;AACxF,SAASC,cAAc,EAAEC,UAAU,QAAQ,wBAAwB;AACnE,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMqC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM7B,UAAU,CAAC8B,OAAO,CAAC,CAAC;QAC3CH,WAAW,CAACE,QAAQ,CAACE,SAAS,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACE,SAAS,CAAC;MACtD,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAAC,sBAAsBD,KAAK,CAACoB,OAAO,EAAE,CAAC;MACjD;IACF,CAAC;IACDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACd4C,UAAU,CAAC3B,WAAW,CAAC;EACzB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAM2B,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI;MACFvB,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMsB,IAAI,GAAG,MAAMrC,UAAU,CAACsC,SAAS,CAACF,IAAI,CAAC;MAC7CzB,QAAQ,CAAC0B,IAAI,CAAC3B,KAAK,CAAC;;MAEpB;MACA,MAAM6B,SAAS,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MACjD,MAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,eAAe,GAAG,EAAE;MAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;QACzCD,eAAe,IAAI,CAACC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIN,SAAS,CAACM,CAAC,CAAC;QACpDF,MAAM,CAACI,IAAI,CAAC;UACVC,IAAI,EAAET,SAAS,CAACM,CAAC,CAAC;UAClBT,IAAI,EAAEQ;QACR,CAAC,CAAC;MACJ;MAEA3B,cAAc,CAAC0B,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZjB,OAAO,CAAClB,KAAK,CAAC,wBAAwB,EAAEmC,GAAG,CAAC;MAC5ClC,QAAQ,CAACkC,GAAG,CAACf,OAAO,CAAC;MACrBvB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMqC,mBAAmB,GAAId,IAAI,IAAK;IACpC3B,cAAc,CAAC2B,IAAI,CAAC;EACtB,CAAC;EAED,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAC3C,WAAW,EAAE;IAElB,MAAM+B,SAAS,GAAG/B,WAAW,CAACgC,KAAK,CAAC,GAAG,CAAC;IACxCD,SAAS,CAACa,GAAG,CAAC,CAAC;IACf3C,cAAc,CAAC8B,SAAS,CAACc,IAAI,CAAC,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIA,IAAI,CAACC,YAAY,EAAE;MACrBN,mBAAmB,CAACK,IAAI,CAACnB,IAAI,CAAC;IAChC,CAAC,MAAM;MACL,IAAI9B,YAAY,EAAE;QAChBA,YAAY,CAACiD,IAAI,CAAC;MACpB;IACF;EACF,CAAC;EAED,MAAME,sBAAsB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEjC,QAAQ,KAAK;IACrE,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAM+B,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB7B,IAAI,EAAEsB,QAAQ;UACd3B,SAAS,EAAEL;QACb,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACqC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,WAAW,GAAG,MAAMvC,QAAQ,CAACwC,IAAI,CAAC,CAAC;;MAEzC;MACA,MAAMC,WAAW,GAAG;QAClBC,SAAS,EAAEH,WAAW,CAACI,UAAU;QACjCb,QAAQ,EAAES,WAAW,CAACK,SAAS;QAC/BC,QAAQ,EAAEN,WAAW,CAACO,SAAS;QAC/BjD,QAAQ,EAAE0C,WAAW,CAACrC,SAAS;QAC/B6C,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE,UAAU;QAClBC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC;MAED3D,mBAAmB,CAAC4D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEb,WAAW,CAAC,CAAC;;MAEnD;MACAc,qBAAqB,CAACd,WAAW,CAACC,SAAS,CAAC;IAE9C,CAAC,CAAC,OAAOzD,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMsE,qBAAqB,GAAG,MAAOb,SAAS,IAAK;IACjD,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMxD,QAAQ,GAAG,MAAM+B,KAAK,CAAC,mCAAmCW,SAAS,EAAE,CAAC;QAC5E,IAAI,CAAC1C,QAAQ,CAACqC,EAAE,EAAE;QAElB,MAAMU,QAAQ,GAAG,MAAM/C,QAAQ,CAACwC,IAAI,CAAC,CAAC;QAEtC9C,mBAAmB,CAAC4D,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAAChB,SAAS,KAAKA,SAAS,GAC5B;UACA,GAAGgB,QAAQ;UACXX,QAAQ,EAAEA,QAAQ,CAACY,gBAAgB;UACnCX,KAAK,EAAED,QAAQ,CAACa,UAAU;UAC1BX,GAAG,EAAEF,QAAQ,CAACc,WAAW;UACzBC,gBAAgB,EAAEf,QAAQ,CAACgB,iBAAiB;UAC5Cb,MAAM,EAAEH,QAAQ,CAACiB,WAAW,GAAG,WAAW,GACnCjB,QAAQ,CAACkB,aAAa,GAAG,aAAa,GAAG;QAClD,CAAC,GACCP,QACN,CAAC,CAAC;;QAEF;QACA,IAAIX,QAAQ,CAACiB,WAAW,IAAIjB,QAAQ,CAACmB,qBAAqB,EAAE;UAC1DC,sBAAsB,CAACzB,SAAS,CAAC;QACnC,CAAC,MAAM,IAAI,CAACK,QAAQ,CAAC9D,KAAK,IAAI,CAAC8D,QAAQ,CAACiB,WAAW,EAAE;UACnD;UACAI,UAAU,CAACZ,YAAY,EAAE,GAAG,CAAC;QAC/B;MAEF,CAAC,CAAC,OAAOvE,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDS,mBAAmB,CAAC4D,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAAChB,SAAS,KAAKA,SAAS,GAC5B;UAAE,GAAGgB,QAAQ;UAAER,MAAM,EAAE,OAAO;UAAEjE,KAAK,EAAEA,KAAK,CAACoB;QAAQ,CAAC,GACtDqD,QACN,CAAC,CAAC;MACJ;IACF,CAAC;IAEDF,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMW,sBAAsB,GAAIzB,SAAS,IAAK;IAC5C;IACAhD,mBAAmB,CAAC4D,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAAChB,SAAS,KAAKA,SAAS,GAC5B;MAAE,GAAGgB,QAAQ;MAAER,MAAM,EAAE;IAAsB,CAAC,GAC9CQ,QACN,CAAC,CAAC;;IAEF;IACA,MAAMW,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAG,iCAAiC9B,SAAS,EAAE;IACxD2B,IAAI,CAACI,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3BJ,QAAQ,CAACpC,IAAI,CAACyC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;;IAEZ;IACAR,UAAU,CAAC,MAAM;MACfE,QAAQ,CAACpC,IAAI,CAAC2C,WAAW,CAACR,IAAI,CAAC;MAC/B3E,mBAAmB,CAAC4D,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACC,QAAQ,IAC3CA,QAAQ,CAAChB,SAAS,KAAKA,SAAS,GAC5B;QAAE,GAAGgB,QAAQ;QAAER,MAAM,EAAE;MAAQ,CAAC,GAChCQ,QACN,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMoB,cAAc,GAAG,MAAAA,CAAOpD,IAAI,EAAEqD,CAAC,KAAK;IACxCA,CAAC,CAACC,eAAe,CAAC,CAAC;;IAEnB;IACA,IAAI,CAACnF,QAAQ,EAAE;MACb,IAAI;QACFM,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD,MAAMJ,QAAQ,GAAG,MAAM7B,UAAU,CAAC8B,OAAO,CAAC,CAAC;QAC3CH,WAAW,CAACE,QAAQ,CAACE,SAAS,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,QAAQ,CAACE,SAAS,CAAC;MAChE,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,sBAAsBD,KAAK,CAACoB,OAAO,EAAE,CAAC;QAC/C;MACF;IACF;IAEA,IAAI;MACF;MACAT,uBAAuB,CAAC,IAAI,CAAC;;MAE7B;MACA,MAAMgC,sBAAsB,CAACF,IAAI,CAACnB,IAAI,EAAEmB,IAAI,CAACP,IAAI,EAAEtB,QAAQ,CAAC;IAC9D,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZjB,OAAO,CAAClB,KAAK,CAAC,kBAAkB,EAAEmC,GAAG,CAAC;MACtClC,QAAQ,CAACkC,GAAG,CAACf,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAM4E,mBAAmB,GAAIjF,QAAQ,IAAK;IACxCV,gBAAgB,CAAC,yBAAyBU,QAAQ,CAACkF,QAAQ,EAAE,CAAC;IAC9D1F,cAAc,CAAC,IAAI,CAAC;IACpBc,UAAU,CAAC3B,WAAW,CAAC,CAAC,CAAC;;IAEzB;IACAyF,UAAU,CAAC,MAAM;MACf9E,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM6F,iBAAiB,GAAIlG,KAAK,IAAK;IACnCO,cAAc,CAACP,KAAK,CAAC;IACrBK,gBAAgB,CAAC,IAAI,CAAC;;IAEtB;IACA8E,UAAU,CAAC,MAAM;MACf5E,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,IAAIP,KAAK,EAAE;IACT,oBACEV,OAAA;MAAK6G,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC9G,OAAA,CAACP,WAAW;QAACsH,IAAI,EAAE,EAAG;QAACF,SAAS,EAAC;MAAmB;QAAAtD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDlH,OAAA;QAAI6G,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAmB;QAAAvD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnElH,OAAA;QAAG6G,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEpG;MAAK;QAAA6C,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7ClH,OAAA;QACEmH,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC3B,WAAW,CAAE;QACvCyG,SAAS,EAAC,uEAAuE;QAAAC,QAAA,EAClF;MAED;QAAAvD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,IAAI1G,SAAS,EAAE;IACb,oBACER,OAAA;MAAK6G,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC9G,OAAA,CAACR,OAAO;QAACuH,IAAI,EAAE,EAAG;QAACF,SAAS,EAAC;MAAiC;QAAAtD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjElH,OAAA;QAAA8G,QAAA,EAAG;MAAgB;QAAAvD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;EAEA,oBACElH,OAAA;IAAK6G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B9G,OAAA;MAAK6G,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC9G,OAAA;QAAK6G,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrD9G,OAAA;UACEmH,OAAO,EAAEpE,UAAW;UACpBqE,QAAQ,EAAE,CAAChH,WAAY;UACvByG,SAAS,EAAE,eAAe,CAACzG,WAAW,GAAG,+BAA+B,GAAG,EAAE,EAAG;UAAA0G,QAAA,gBAEhF9G,OAAA,CAACV,WAAW;YAACyH,IAAI,EAAE;UAAG;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,MAE3B;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETlH,OAAA;UAAK6G,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B9G,OAAA;YAAK6G,SAAS,EAAC,oDAAoD;YAAAC,QAAA,gBACjE9G,OAAA;cACEmH,OAAO,EAAEA,CAAA,KAAMrE,mBAAmB,CAAC,EAAE,CAAE;cACvC+D,SAAS,EAAC,uDAAuD;cAAAC,QAAA,EAClE;YAED;cAAAvD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAERtG,WAAW,CAACsE,GAAG,CAAC,CAACmC,KAAK,EAAEC,KAAK,kBAC5BtH,OAAA,CAACf,KAAK,CAACsI,QAAQ;cAAAT,QAAA,gBACb9G,OAAA;gBAAM6G,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAvD,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7ClH,OAAA;gBACEmH,OAAO,EAAEA,CAAA,KAAMrE,mBAAmB,CAACuE,KAAK,CAACrF,IAAI,CAAE;gBAC/C6E,SAAS,EAAC,yEAAyE;gBAAAC,QAAA,EAElFO,KAAK,CAACzE;cAAI;gBAAAW,QAAA,EAAAyD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,GAPUI,KAAK;cAAA/D,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACjB,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAA3D,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlH,OAAA;QAAK6G,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EACjD1G,WAAW,IAAI;MAAgB;QAAAmD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL5G,KAAK,CAACoC,MAAM,KAAK,CAAC,gBACjB1C,OAAA;MAAK6G,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B9G,OAAA,CAACZ,MAAM;QAAC2H,IAAI,EAAE,EAAG;QAACF,SAAS,EAAC;MAA4B;QAAAtD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DlH,OAAA;QAAI6G,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAAe;QAAAvD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtElH,OAAA;QAAG6G,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAA+B;QAAAvD,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,gBAENlH,OAAA;MAAK6G,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBxG,KAAK,CAAC4E,GAAG,CAAE/B,IAAI,iBACdnD,OAAA;QAEEmH,OAAO,EAAEA,CAAA,KAAMjE,eAAe,CAACC,IAAI,CAAE;QACrC0D,SAAS,EAAE,aAAa1D,IAAI,CAACC,YAAY,GAAG,WAAW,GAAG,EAAE,EAAG;QAAA0D,QAAA,gBAE/D9G,OAAA;UAAK6G,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvB3D,IAAI,CAACC,YAAY,gBAChBpD,OAAA,CAACZ,MAAM;YAAC2H,IAAI,EAAE;UAAG;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEpBlH,OAAA,CAACX,IAAI;YAAC0H,IAAI,EAAE;UAAG;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAClB;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENlH,OAAA;UAAK6G,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB9G,OAAA;YAAK6G,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAE3D,IAAI,CAACP;UAAI;YAAAW,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5ClH,OAAA;YAAK6G,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B9G,OAAA;cAAA8G,QAAA,EAAOpH,cAAc,CAACyD,IAAI,CAAC4D,IAAI;YAAC;cAAAxD,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxClH,OAAA;cAAA8G,QAAA,EAAOnH,UAAU,CAACwD,IAAI,CAACqE,aAAa;YAAC;cAAAjE,QAAA,EAAAyD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAA3D,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL,CAAC/D,IAAI,CAACC,YAAY,iBACjBpD,OAAA;UACEmH,OAAO,EAAGX,CAAC,IAAKD,cAAc,CAACpD,IAAI,EAAEqD,CAAC,CAAE;UACxCK,SAAS,EAAC,iCAAiC;UAC3CY,KAAK,EAAE,YAAYtE,IAAI,CAACP,IAAI,yBAA0B;UAAAkE,QAAA,gBAEtD9G,OAAA,CAACT,QAAQ;YAACwH,IAAI,EAAE;UAAG;YAAAxD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtBlH,OAAA;YAAM6G,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAQ;YAAAvD,QAAA,EAAAyD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAA3D,QAAA,EAAAyD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACT;MAAA,GA7BI/D,IAAI,CAACnB,IAAI;QAAAuB,QAAA,EAAAyD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8BX,CACN;IAAC;MAAA3D,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAEDlH,OAAA,CAACH,UAAU;MACTO,WAAW,EAAEA,WAAY;MACzBsH,eAAe,EAAEhB,mBAAoB;MACrCiB,aAAa,EAAEf;IAAkB;MAAArD,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAEDpG,aAAa,iBACZd,OAAA;MAAK6G,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrChG;IAAa;MAAAyC,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACN,EAEAlG,WAAW,iBACVhB,OAAA;MAAK6G,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnC9F;IAAW;MAAAuC,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACN,EAEA9F,oBAAoB,iBACnBpB,OAAA,CAACF,gBAAgB;MAAC8H,OAAO,EAAEA,CAAA,KAAMvG,uBAAuB,CAAC,KAAK;IAAE;MAAAkC,QAAA,EAAAyD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnE;EAAA;IAAA3D,QAAA,EAAAyD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/G,EAAA,CA9XIF,YAAY;AAAA4H,EAAA,GAAZ5H,YAAY;AAgYlB,eAAeA,YAAY;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}