{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FileExplorer from './components/FileExplorer/FileExplorer';\nimport MetricsDashboard from './components/MetricsDashboard/MetricsDashboard';\nimport ControlPanel from './components/ControlPanel/ControlPanel';\nimport AlgorithmInsights from './components/AlgorithmInsights/AlgorithmInsights';\nimport apiService from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [error, setError] = useState(null);\n  const [globalMetrics, setGlobalMetrics] = useState(null);\n  const [page, setPage] = useState('home'); // 'home' or 'analysis'\n\n  useEffect(() => {\n    let retryTimeout;\n    const connectToServer = async () => {\n      try {\n        await apiService.connect();\n        setConnectionStatus('connected');\n        setError(null);\n      } catch (err) {\n        setConnectionStatus('disconnected');\n        setError(err.message);\n        retryTimeout = setTimeout(connectToServer, 5000);\n      }\n    };\n    connectToServer();\n    return () => {\n      apiService.disconnect();\n      clearTimeout(retryTimeout);\n    };\n  }, []);\n  const handleFileSelect = file => {\n    console.log('Selected file:', file);\n  };\n  if (connectionStatus === 'connecting') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app connecting\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  if (connectionStatus === 'disconnected') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app connecting\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error || 'Unable to connect to the server.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Retrying in a few seconds...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(App, \"Wx7OwyNvjgXh1YaYfEJZwvESnzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileExplorer","MetricsDashboard","ControlPanel","AlgorithmInsights","apiService","jsxDEV","_jsxDEV","App","_s","connectionStatus","setConnectionStatus","error","setError","globalMetrics","setGlobalMetrics","page","setPage","retryTimeout","connectToServer","connect","err","message","setTimeout","disconnect","clearTimeout","handleFileSelect","file","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileExplorer from './components/FileExplorer/FileExplorer';\r\nimport MetricsDashboard from './components/MetricsDashboard/MetricsDashboard';\r\nimport ControlPanel from './components/ControlPanel/ControlPanel';\r\nimport AlgorithmInsights from './components/AlgorithmInsights/AlgorithmInsights';\r\nimport apiService from './services/api';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\r\n  const [error, setError] = useState(null);\r\n  const [globalMetrics, setGlobalMetrics] = useState(null);\r\n  const [page, setPage] = useState('home'); // 'home' or 'analysis'\r\n\r\n  useEffect(() => {\r\n    let retryTimeout;\r\n\r\n    const connectToServer = async () => {\r\n      try {\r\n        await apiService.connect();\r\n        setConnectionStatus('connected');\r\n        setError(null);\r\n      } catch (err) {\r\n        setConnectionStatus('disconnected');\r\n        setError(err.message);\r\n        retryTimeout = setTimeout(connectToServer, 5000);\r\n      }\r\n    };\r\n\r\n    connectToServer();\r\n\r\n    return () => {\r\n      apiService.disconnect();\r\n      clearTimeout(retryTimeout);\r\n    };\r\n  }, []);\r\n\r\n  const handleFileSelect = (file) => {\r\n    console.log('Selected file:', file);\r\n  };\r\n\r\n  if (connectionStatus === 'connecting') {\r\n    return (\r\n      <div className=\"app connecting\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Connecting to server...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (connectionStatus === 'disconnected') {\r\n    return (\r\n      <div className=\"app connecting\">\r\n        <div className=\"error-icon\">⚠️</div>\r\n        <h2>Connection Error</h2>\r\n        <p>{error || 'Unable to connect to the server.'}</p>\r\n        <p>Retrying in a few seconds...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}