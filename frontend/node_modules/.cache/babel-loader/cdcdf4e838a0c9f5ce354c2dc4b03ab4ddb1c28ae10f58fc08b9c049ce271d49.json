{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { FiSearch, FiFilter, FiLock, FiGrid, FiList } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n\n  // Get client ID for downloads\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Client connected:', response.client_id);\n      } catch (error) {\n        console.error('Failed to get client ID:', error);\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n\n      // Generate breadcrumbs\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      console.error('Failed to fetch files:', err);\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n  };\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) {\n      navigateToDirectory(file.path);\n    } else {\n      if (onFileSelect) {\n        onFileSelect(file);\n      }\n    }\n  };\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\n    try {\n      // Start download session using API service\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\n\n      // Add to downloads list\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloadSessions(prev => [...prev, newDownload]);\n\n      // Immediately trigger browser download (no waiting for processing)\n      triggerBrowserDownload(newDownload.sessionId);\n\n      // Start progress tracking\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (error) {\n      console.error('Download error:', error);\n      throw error;\n    }\n  };\n  const trackDownloadProgress = async sessionId => {\n    const pollProgress = async () => {\n      try {\n        const progress = await apiService.getDownloadProgress(sessionId);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : download));\n\n        // Continue polling while download is active\n        if (!progress.error && !progress.is_complete) {\n          setTimeout(pollProgress, 500); // Poll every 500ms for smoother updates\n        } else if (progress.is_complete) {\n          // Mark as completed - no need to trigger another download\n          setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n            ...download,\n            status: 'completed'\n          } : download));\n        }\n      } catch (error) {\n        console.error('Progress tracking error:', error);\n        setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    pollProgress();\n  };\n  const triggerBrowserDownload = sessionId => {\n    // Update status to show download is starting\n    setDownloadSessions(prev => prev.map(download => download.sessionId === sessionId ? {\n      ...download,\n      status: 'downloading'\n    } : download));\n\n    // Create hidden link to trigger download - use full URL from API service\n    const link = document.createElement('a');\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up\n    setTimeout(() => {\n      document.body.removeChild(link);\n    }, 100);\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n\n    // Try to reconnect if no client ID\n    if (!clientId) {\n      try {\n        console.log('No client ID, attempting to reconnect...');\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n        console.log('Reconnected with client ID:', response.client_id);\n      } catch (error) {\n        console.error('Reconnection failed:', error);\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      // Show download progress panel\n      setShowDownloadProgress(true);\n\n      // Start the Mega.nz style download directly\n      await startMegaStyleDownload(file.path, file.name, clientId);\n    } catch (err) {\n      console.error('Download failed:', err);\n      setError(err.message);\n    }\n  };\n  const handleUploadSuccess = response => {\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath); // Refresh file list\n\n    // Clear success message after 5 seconds\n    setTimeout(() => {\n      setUploadSuccess(null);\n    }, 5000);\n  };\n  const handleUploadError = error => {\n    setUploadError(error);\n    setUploadSuccess(null);\n\n    // Clear error message after 7 seconds\n    setTimeout(() => {\n      setUploadError(null);\n    }, 7000);\n  };\n  const handleSearchChange = async e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n    if (query.trim() === '') {\n      setSearchResults(null);\n      return;\n    }\n    try {\n      // Fetch all files from current directory\n      const data = await apiService.listFiles(currentPath);\n      // Filter files by name (case-insensitive)\n      const matches = data.files.filter(f => f.name.toLowerCase().includes(query.toLowerCase()));\n      setSearchResults(matches);\n    } catch (err) {\n      setSearchResults([]);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header-title\",\n          children: \"File Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box\",\n            children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n              className: \"search-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search files\\u2026\",\n              value: searchQuery,\n              onChange: handleSearchChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            children: [/*#__PURE__*/_jsxDEV(FiFilter, {\n              className: \"filter-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), \" Filter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(FiLock, {\n            className: \"lock-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"2.3 GB / 10 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          children: \"+ Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-btn selected\",\n            children: /*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-btn\",\n            children: /*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-files-label\",\n      children: \"RecentFiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), (searchResults !== null ? searchResults.length === 0 : files.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48,\n        className: \"mx-auto mb-4 text-gray-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-600\",\n        children: searchResults !== null ? 'No files match your search' : 'Empty directory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: searchResults !== null ? 'Try a different search term.' : 'No files found in this location'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-grid\",\n      children: (searchResults !== null ? searchResults : files).map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleFileClick(file),\n        className: `file-item ${file.is_directory ? 'directory' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(File, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(file.modified_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleDownload(file, e),\n          className: \"download-button modern-download\",\n          title: `Download ${file.name} with real-time metrics`,\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"download-text\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }, this)]\n      }, file.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), showDownloadProgress && downloadSessions.length > 0 && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      downloads: downloadSessions,\n      onClose: () => setShowDownloadProgress(false),\n      onRemoveDownload: sessionId => setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"7Dceos4LCR+vrT5Uj7euGQPODco=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","FiSearch","FiFilter","FiLock","FiGrid","FiList","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","searchQuery","setSearchQuery","searchResults","setSearchResults","getClientId","response","connect","client_id","console","log","message","fetchFiles","path","data","listFiles","pathParts","split","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","navigateToDirectory","navigateUp","pop","join","handleFileClick","file","is_directory","startMegaStyleDownload","filePath","fileName","sessionData","startDownloadSession","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","prev","triggerBrowserDownload","trackDownloadProgress","pollProgress","getDownloadProgress","map","download","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","setTimeout","link","document","createElement","baseURL","process","env","REACT_APP_API_URL","href","style","display","body","appendChild","click","removeChild","handleDownload","e","stopPropagation","handleUploadSuccess","filename","handleUploadError","handleSearchChange","query","target","value","trim","matches","f","toLowerCase","includes","className","children","size","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","modified_time","title","onUploadSuccess","onUploadError","downloads","onClose","onRemoveDownload","d","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\nimport { FiSearch, FiFilter, FiLock, FiGrid, FiList } from 'react-icons/fi';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState(null);\r\n\r\n  // Get client ID for downloads\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Client connected:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Failed to get client ID:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n      \r\n      // Generate breadcrumbs\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      \r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({\r\n          name: pathParts[i],\r\n          path: accumulatedPath\r\n        });\r\n      }\r\n      \r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      console.error('Failed to fetch files:', err);\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateToDirectory = (path) => {\r\n    setCurrentPath(path);\r\n  };\r\n\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    \r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) {\r\n      navigateToDirectory(file.path);\r\n    } else {\r\n      if (onFileSelect) {\r\n        onFileSelect(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startMegaStyleDownload = async (filePath, fileName, clientId) => {\r\n    try {\r\n      // Start download session using API service\r\n      const sessionData = await apiService.startDownloadSession(filePath, clientId);\r\n      \r\n      // Add to downloads list\r\n      const newDownload = {\r\n        sessionId: sessionData.session_id,\r\n        fileName: sessionData.file_name,\r\n        fileSize: sessionData.file_size,\r\n        clientId: sessionData.client_id,\r\n        progress: 0,\r\n        speed: 0,\r\n        eta: 0,\r\n        status: 'starting',\r\n        startTime: Date.now()\r\n      };\r\n\r\n      setDownloadSessions(prev => [...prev, newDownload]);\r\n\r\n      // Immediately trigger browser download (no waiting for processing)\r\n      triggerBrowserDownload(newDownload.sessionId);\r\n      \r\n      // Start progress tracking\r\n      trackDownloadProgress(newDownload.sessionId);\r\n\r\n    } catch (error) {\r\n      console.error('Download error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const pollProgress = async () => {\r\n      try {\r\n        const progress = await apiService.getDownloadProgress(sessionId);\r\n        \r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? {\r\n              ...download,\r\n              progress: progress.progress_percent,\r\n              speed: progress.speed_mbps,\r\n              eta: progress.eta_seconds,\r\n              bytesTransferred: progress.bytes_transferred,\r\n              status: progress.is_complete ? 'completed' : \r\n                     progress.is_processing ? 'downloading' : 'starting'\r\n            }\r\n            : download\r\n        ));\r\n\r\n        // Continue polling while download is active\r\n        if (!progress.error && !progress.is_complete) {\r\n          setTimeout(pollProgress, 500);  // Poll every 500ms for smoother updates\r\n        } else if (progress.is_complete) {\r\n          // Mark as completed - no need to trigger another download\r\n          setDownloadSessions(prev => prev.map(download => \r\n            download.sessionId === sessionId \r\n              ? { ...download, status: 'completed' }\r\n              : download\r\n          ));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Progress tracking error:', error);\r\n        setDownloadSessions(prev => prev.map(download => \r\n          download.sessionId === sessionId \r\n            ? { ...download, status: 'error', error: error.message }\r\n            : download\r\n        ));\r\n      }\r\n    };\r\n\r\n    pollProgress();\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    // Update status to show download is starting\r\n    setDownloadSessions(prev => prev.map(download => \r\n      download.sessionId === sessionId \r\n        ? { ...download, status: 'downloading' }\r\n        : download\r\n    ));\r\n\r\n    // Create hidden link to trigger download - use full URL from API service\r\n    const link = document.createElement('a');\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // Clean up\r\n    setTimeout(() => {\r\n      document.body.removeChild(link);\r\n    }, 100);\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // Try to reconnect if no client ID\r\n    if (!clientId) {\r\n      try {\r\n        console.log('No client ID, attempting to reconnect...');\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n        console.log('Reconnected with client ID:', response.client_id);\r\n      } catch (error) {\r\n        console.error('Reconnection failed:', error);\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      // Show download progress panel\r\n      setShowDownloadProgress(true);\r\n      \r\n      // Start the Mega.nz style download directly\r\n      await startMegaStyleDownload(file.path, file.name, clientId);\r\n    } catch (err) {\r\n      console.error('Download failed:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = (response) => {\r\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath); // Refresh file list\r\n    \r\n    // Clear success message after 5 seconds\r\n    setTimeout(() => {\r\n      setUploadSuccess(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleUploadError = (error) => {\r\n    setUploadError(error);\r\n    setUploadSuccess(null);\r\n    \r\n    // Clear error message after 7 seconds\r\n    setTimeout(() => {\r\n      setUploadError(null);\r\n    }, 7000);\r\n  };\r\n\r\n  const handleSearchChange = async (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n\r\n    if (query.trim() === '') {\r\n      setSearchResults(null);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Fetch all files from current directory\r\n      const data = await apiService.listFiles(currentPath);\r\n      // Filter files by name (case-insensitive)\r\n      const matches = data.files.filter(f =>\r\n        f.name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      setSearchResults(matches);\r\n    } catch (err) {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3 className=\"text-xl font-semibold mb-2\">Error Loading Files</h3>\r\n        <p className=\"text-gray-600 mb-4\">{error}</p>\r\n        <button \r\n          onClick={() => fetchFiles(currentPath)}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-manager-header\">\r\n        <div className=\"left-section\">\r\n          <h2 className=\"header-title\">File Manager</h2>\r\n          <div className=\"search-filter-group\">\r\n            <div className=\"search-box\">\r\n              <FiSearch className=\"search-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search files…\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n              />\r\n            </div>\r\n            <button className=\"filter-button\">\r\n              <FiFilter className=\"filter-icon\" /> Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          <div className=\"storage-indicator\">\r\n            <FiLock className=\"lock-icon\" />\r\n            <span>2.3 GB / 10 GB</span>\r\n          </div>\r\n          <button className=\"upload-button\">+ Upload</button>\r\n          <div className=\"view-toggle\">\r\n            <button className=\"view-btn selected\"><FiGrid /></button>\r\n            <button className=\"view-btn\"><FiList /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"recent-files-label\">RecentFiles</div>\r\n      {(searchResults !== null ? searchResults.length === 0 : files.length === 0) ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} className=\"mx-auto mb-4 text-gray-400\" />\r\n          <h3 className=\"text-lg font-medium text-gray-600\">\r\n            {searchResults !== null ? 'No files match your search' : 'Empty directory'}\r\n          </h3>\r\n          <p className=\"text-gray-500\">\r\n            {searchResults !== null ? 'Try a different search term.' : 'No files found in this location'}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"file-grid\">\r\n          {(searchResults !== null ? searchResults : files).map((file) => (\r\n            <div\r\n              key={file.path}\r\n              onClick={() => handleFileClick(file)}\r\n              className={`file-item ${file.is_directory ? 'directory' : ''}`}\r\n            >\r\n              <div className=\"file-icon\">\r\n                {file.is_directory ? (\r\n                  <Folder size={24} />\r\n                ) : (\r\n                  <File size={24} />\r\n                )}\r\n              </div>\r\n              <div className=\"file-info\">\r\n                <div className=\"file-name\">{file.name}</div>\r\n                <div className=\"file-details\">\r\n                  <span>{formatFileSize(file.size)}</span>\r\n                  <span>{formatDate(file.modified_time)}</span>\r\n                </div>\r\n              </div>\r\n              {!file.is_directory && (\r\n                <button\r\n                  onClick={(e) => handleDownload(file, e)}\r\n                  className=\"download-button modern-download\"\r\n                  title={`Download ${file.name} with real-time metrics`}\r\n                >\r\n                  <Download size={16} />\r\n                  <span className=\"download-text\">Download</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <FileUpload \r\n        currentPath={currentPath}\r\n        onUploadSuccess={handleUploadSuccess}\r\n        onUploadError={handleUploadError}\r\n      />\r\n      \r\n      {uploadSuccess && (\r\n        <div className=\"upload-feedback success\">\r\n          {uploadSuccess}\r\n        </div>\r\n      )}\r\n      \r\n      {uploadError && (\r\n        <div className=\"upload-feedback error\">\r\n          {uploadError}\r\n        </div>\r\n      )}\r\n      \r\n      {showDownloadProgress && downloadSessions.length > 0 && (\r\n        <DownloadProgress \r\n          downloads={downloadSessions}\r\n          onClose={() => setShowDownloadProgress(false)}\r\n          onRemoveDownload={(sessionId) => \r\n            setDownloadSessions(prev => prev.filter(d => d.sessionId !== sessionId))\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}