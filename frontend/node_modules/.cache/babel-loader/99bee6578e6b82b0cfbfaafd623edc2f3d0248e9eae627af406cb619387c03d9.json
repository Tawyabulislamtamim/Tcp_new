{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tawyabul Islam Tamim\\\\3-1\\\\computer networking\\\\project\\\\tcp-file-transfer\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\FileExplorer\\\\FileExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\nimport { formatFileSize, formatDate } from '../../utils/formatters';\nimport apiService from '../../services/api';\nimport FileUpload from '../FileUpload/FileUpload';\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\nimport './FileExplorer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = ({\n  onFileSelect\n}) => {\n  _s();\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [uploadSuccess, setUploadSuccess] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [downloadSessions, setDownloadSessions] = useState([]);\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\n  const [clientId, setClientId] = useState(null);\n  useEffect(() => {\n    const getClientId = async () => {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n      } catch (error) {\n        setError(`Connection failed: ${error.message}`);\n      }\n    };\n    getClientId();\n  }, []);\n  useEffect(() => {\n    fetchFiles(currentPath);\n  }, [currentPath]);\n  const fetchFiles = async path => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const data = await apiService.listFiles(path);\n      setFiles(data.files);\n      const pathParts = path.split('/').filter(Boolean);\n      const crumbs = [];\n      let accumulatedPath = '';\n      for (let i = 0; i < pathParts.length; i++) {\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\n        crumbs.push({\n          name: pathParts[i],\n          path: accumulatedPath\n        });\n      }\n      setBreadcrumbs(crumbs);\n    } catch (err) {\n      setError(err.message);\n      setFiles([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const navigateToDirectory = path => {\n    setCurrentPath(path);\n  };\n  const navigateUp = () => {\n    if (!currentPath) return;\n    const pathParts = currentPath.split('/');\n    pathParts.pop();\n    setCurrentPath(pathParts.join('/'));\n  };\n  const handleFileClick = file => {\n    if (file.is_directory) navigateToDirectory(file.path);else if (onFileSelect) onFileSelect(file);\n  };\n  const handlePreview = (file, e) => {\n    e.stopPropagation();\n    if (file.is_directory) return;\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    const previewUrl = `${baseURL}/files/preview/${encodeURIComponent(file.path)}`;\n    const ext = file.name.split('.').pop().toLowerCase();\n    const previewable = ['jpg', 'jpeg', 'png', 'gif', 'pdf', 'mp4', 'webm'];\n    if (previewable.includes(ext)) {\n      window.open(previewUrl, '_blank');\n    } else {\n      alert('Preview not supported for this file type.');\n    }\n  };\n  const handleDownload = async (file, e) => {\n    e.stopPropagation();\n    if (!clientId) {\n      try {\n        const response = await apiService.connect();\n        setClientId(response.client_id);\n      } catch (error) {\n        setError(`Connection failed: ${error.message}`);\n        return;\n      }\n    }\n    try {\n      setShowDownloadProgress(true);\n      const sessionData = await apiService.startDownloadSession(file.path, clientId);\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloadSessions(prev => [...prev, newDownload]);\n      triggerBrowserDownload(newDownload.sessionId);\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const triggerBrowserDownload = sessionId => {\n    setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? {\n      ...d,\n      status: 'downloading'\n    } : d));\n    const link = document.createElement('a');\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    setTimeout(() => document.body.removeChild(link), 100);\n  };\n  const trackDownloadProgress = async sessionId => {\n    const poll = async () => {\n      try {\n        const progress = await apiService.getDownloadProgress(sessionId);\n        setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? {\n          ...d,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : d));\n        if (!progress.error && !progress.is_complete) setTimeout(poll, 500);\n      } catch (error) {\n        setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? {\n          ...d,\n          status: 'error',\n          error: error.message\n        } : d));\n      }\n    };\n    poll();\n  };\n  const handleUploadSuccess = response => {\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\n    setUploadError(null);\n    fetchFiles(currentPath);\n    setTimeout(() => setUploadSuccess(null), 5000);\n  };\n  const handleUploadError = error => {\n    setUploadError(error);\n    setUploadSuccess(null);\n    setTimeout(() => setUploadError(null), 7000);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        size: 48,\n        className: \"text-red-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error Loading Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchFiles(currentPath),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer loading\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"animate-spin text-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading files...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-explorer-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateUp,\n          disabled: !currentPath,\n          className: `back-button ${!currentPath ? 'disabled' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), \" Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breadcrumbs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigateToDirectory(''),\n              className: \"breadcrumb\",\n              children: \"Root\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), breadcrumbs.map((crumb, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"separator\",\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigateToDirectory(crumb.path),\n                className: \"breadcrumb\",\n                children: crumb.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path\",\n        children: currentPath || 'Root directory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-directory\",\n      children: [/*#__PURE__*/_jsxDEV(Folder, {\n        size: 48,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Empty directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files found in this location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-grid\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleFileClick(file),\n        className: `file-item ${file.is_directory ? 'directory' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: file.is_directory ? /*#__PURE__*/_jsxDEV(Folder, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 63\n          }, this) : /*#__PURE__*/_jsxDEV(File, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 86\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatFileSize(file.size)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatDate(file.modified_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), !file.is_directory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handlePreview(file, e),\n            className: \"preview-button\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDownload(file, e),\n            className: \"download-button\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 96\n            }, this), \" Download\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)]\n      }, file.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      currentPath: currentPath,\n      onUploadSuccess: handleUploadSuccess,\n      onUploadError: handleUploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback success\",\n      children: uploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-feedback error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 23\n    }, this), showDownloadProgress && downloadSessions.length > 0 && /*#__PURE__*/_jsxDEV(DownloadProgress, {\n      downloads: downloadSessions,\n      onClose: () => setShowDownloadProgress(false),\n      onRemoveDownload: id => setDownloadSessions(prev => prev.filter(d => d.sessionId !== id))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(FileExplorer, \"VaYLfcWjmnmKjWuC8T7bUJ/EaHQ=\");\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Folder","File","ChevronLeft","Download","Loader2","AlertCircle","formatFileSize","formatDate","apiService","FileUpload","DownloadProgress","jsxDEV","_jsxDEV","FileExplorer","onFileSelect","_s","currentPath","setCurrentPath","files","setFiles","isLoading","setIsLoading","error","setError","breadcrumbs","setBreadcrumbs","uploadSuccess","setUploadSuccess","uploadError","setUploadError","downloadSessions","setDownloadSessions","showDownloadProgress","setShowDownloadProgress","clientId","setClientId","getClientId","response","connect","client_id","message","fetchFiles","path","data","listFiles","pathParts","split","filter","Boolean","crumbs","accumulatedPath","i","length","push","name","err","navigateToDirectory","navigateUp","pop","join","handleFileClick","file","is_directory","handlePreview","e","stopPropagation","baseURL","process","env","REACT_APP_API_URL","previewUrl","encodeURIComponent","ext","toLowerCase","previewable","includes","window","open","alert","handleDownload","sessionData","startDownloadSession","newDownload","sessionId","session_id","fileName","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","prev","triggerBrowserDownload","trackDownloadProgress","map","d","link","document","createElement","href","style","display","body","appendChild","click","setTimeout","removeChild","poll","getDownloadProgress","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","handleUploadSuccess","filename","handleUploadError","className","children","size","_jsxFileName","lineNumber","columnNumber","onClick","disabled","crumb","idx","Fragment","modified_time","onUploadSuccess","onUploadError","downloads","onClose","onRemoveDownload","id","_c","$RefreshReg$"],"sources":["D:/Tawyabul Islam Tamim/3-1/computer networking/project/tcp-file-transfer/tcp-file-transfer/frontend/src/components/FileExplorer/FileExplorer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Folder, File, ChevronLeft, Download, Loader2, AlertCircle } from 'lucide-react';\r\nimport { formatFileSize, formatDate } from '../../utils/formatters';\r\nimport apiService from '../../services/api';\r\nimport FileUpload from '../FileUpload/FileUpload';\r\nimport DownloadProgress from '../DownloadProgress/DownloadProgress';\r\nimport './FileExplorer.css';\r\n\r\nconst FileExplorer = ({ onFileSelect }) => {\r\n  const [currentPath, setCurrentPath] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const [uploadSuccess, setUploadSuccess] = useState(null);\r\n  const [uploadError, setUploadError] = useState(null);\r\n  const [downloadSessions, setDownloadSessions] = useState([]);\r\n  const [showDownloadProgress, setShowDownloadProgress] = useState(false);\r\n  const [clientId, setClientId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getClientId = async () => {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n      } catch (error) {\r\n        setError(`Connection failed: ${error.message}`);\r\n      }\r\n    };\r\n    getClientId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles(currentPath);\r\n  }, [currentPath]);\r\n\r\n  const fetchFiles = async (path) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const data = await apiService.listFiles(path);\r\n      setFiles(data.files);\r\n      const pathParts = path.split('/').filter(Boolean);\r\n      const crumbs = [];\r\n      let accumulatedPath = '';\r\n      for (let i = 0; i < pathParts.length; i++) {\r\n        accumulatedPath += (i > 0 ? '/' : '') + pathParts[i];\r\n        crumbs.push({ name: pathParts[i], path: accumulatedPath });\r\n      }\r\n      setBreadcrumbs(crumbs);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setFiles([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateToDirectory = (path) => {\r\n    setCurrentPath(path);\r\n  };\r\n\r\n  const navigateUp = () => {\r\n    if (!currentPath) return;\r\n    const pathParts = currentPath.split('/');\r\n    pathParts.pop();\r\n    setCurrentPath(pathParts.join('/'));\r\n  };\r\n\r\n  const handleFileClick = (file) => {\r\n    if (file.is_directory) navigateToDirectory(file.path);\r\n    else if (onFileSelect) onFileSelect(file);\r\n  };\r\n\r\n  const handlePreview = (file, e) => {\r\n    e.stopPropagation();\r\n    if (file.is_directory) return;\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    const previewUrl = `${baseURL}/files/preview/${encodeURIComponent(file.path)}`;\r\n    const ext = file.name.split('.').pop().toLowerCase();\r\n    const previewable = ['jpg', 'jpeg', 'png', 'gif', 'pdf', 'mp4', 'webm'];\r\n    if (previewable.includes(ext)) {\r\n      window.open(previewUrl, '_blank');\r\n    } else {\r\n      alert('Preview not supported for this file type.');\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (file, e) => {\r\n    e.stopPropagation();\r\n    if (!clientId) {\r\n      try {\r\n        const response = await apiService.connect();\r\n        setClientId(response.client_id);\r\n      } catch (error) {\r\n        setError(`Connection failed: ${error.message}`);\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      setShowDownloadProgress(true);\r\n      const sessionData = await apiService.startDownloadSession(file.path, clientId);\r\n      const newDownload = {\r\n        sessionId: sessionData.session_id,\r\n        fileName: sessionData.file_name,\r\n        fileSize: sessionData.file_size,\r\n        clientId: sessionData.client_id,\r\n        progress: 0,\r\n        speed: 0,\r\n        eta: 0,\r\n        status: 'starting',\r\n        startTime: Date.now(),\r\n      };\r\n      setDownloadSessions(prev => [...prev, newDownload]);\r\n      triggerBrowserDownload(newDownload.sessionId);\r\n      trackDownloadProgress(newDownload.sessionId);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const triggerBrowserDownload = (sessionId) => {\r\n    setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? { ...d, status: 'downloading' } : d));\r\n    const link = document.createElement('a');\r\n    const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n    link.href = `${baseURL}/transfer/stream-download/${sessionId}`;\r\n    link.style.display = 'none';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    setTimeout(() => document.body.removeChild(link), 100);\r\n  };\r\n\r\n  const trackDownloadProgress = async (sessionId) => {\r\n    const poll = async () => {\r\n      try {\r\n        const progress = await apiService.getDownloadProgress(sessionId);\r\n        setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? {\r\n          ...d,\r\n          progress: progress.progress_percent,\r\n          speed: progress.speed_mbps,\r\n          eta: progress.eta_seconds,\r\n          bytesTransferred: progress.bytes_transferred,\r\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\r\n        } : d));\r\n        if (!progress.error && !progress.is_complete) setTimeout(poll, 500);\r\n      } catch (error) {\r\n        setDownloadSessions(prev => prev.map(d => d.sessionId === sessionId ? { ...d, status: 'error', error: error.message } : d));\r\n      }\r\n    };\r\n    poll();\r\n  };\r\n\r\n  const handleUploadSuccess = (response) => {\r\n    setUploadSuccess(`Successfully uploaded ${response.filename}`);\r\n    setUploadError(null);\r\n    fetchFiles(currentPath);\r\n    setTimeout(() => setUploadSuccess(null), 5000);\r\n  };\r\n\r\n  const handleUploadError = (error) => {\r\n    setUploadError(error);\r\n    setUploadSuccess(null);\r\n    setTimeout(() => setUploadError(null), 7000);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"file-explorer error\">\r\n        <AlertCircle size={48} className=\"text-red-500 mb-4\" />\r\n        <h3>Error Loading Files</h3>\r\n        <p>{error}</p>\r\n        <button onClick={() => fetchFiles(currentPath)}>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"file-explorer loading\">\r\n        <Loader2 size={48} className=\"animate-spin text-blue-500 mb-4\" />\r\n        <p>Loading files...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"file-explorer\">\r\n      <div className=\"file-explorer-header\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <button onClick={navigateUp} disabled={!currentPath} className={`back-button ${!currentPath ? 'disabled' : ''}`}>\r\n            <ChevronLeft size={16} /> Up\r\n          </button>\r\n          <div className=\"flex-1 ml-4\">\r\n            <div className=\"breadcrumbs\">\r\n              <button onClick={() => navigateToDirectory('')} className=\"breadcrumb\">Root</button>\r\n              {breadcrumbs.map((crumb, idx) => (\r\n                <React.Fragment key={idx}>\r\n                  <span className=\"separator\">/</span>\r\n                  <button onClick={() => navigateToDirectory(crumb.path)} className=\"breadcrumb\">{crumb.name}</button>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"path\">{currentPath || 'Root directory'}</div>\r\n      </div>\r\n\r\n      {files.length === 0 ? (\r\n        <div className=\"empty-directory\">\r\n          <Folder size={48} className=\"icon\" />\r\n          <h3>Empty directory</h3>\r\n          <p>No files found in this location</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"file-grid\">\r\n          {files.map((file) => (\r\n            <div key={file.path} onClick={() => handleFileClick(file)} className={`file-item ${file.is_directory ? 'directory' : ''}`}>\r\n              <div className=\"file-icon\">{file.is_directory ? <Folder size={24} /> : <File size={24} />}</div>\r\n              <div className=\"file-info\">\r\n                <div className=\"file-name\">{file.name}</div>\r\n                <div className=\"file-details\">\r\n                  <span>{formatFileSize(file.size)}</span>\r\n                  <span>{formatDate(file.modified_time)}</span>\r\n                </div>\r\n              </div>\r\n              {!file.is_directory && (\r\n                <div className=\"file-actions\">\r\n                  <button onClick={(e) => handlePreview(file, e)} className=\"preview-button\">Preview</button>\r\n                  <button onClick={(e) => handleDownload(file, e)} className=\"download-button\"><Download size={16} /> Download</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <FileUpload currentPath={currentPath} onUploadSuccess={handleUploadSuccess} onUploadError={handleUploadError} />\r\n      {uploadSuccess && <div className=\"upload-feedback success\">{uploadSuccess}</div>}\r\n      {uploadError && <div className=\"upload-feedback error\">{uploadError}</div>}\r\n      {showDownloadProgress && downloadSessions.length > 0 && (\r\n        <DownloadProgress \r\n          downloads={downloadSessions}\r\n          onClose={() => setShowDownloadProgress(false)}\r\n          onRemoveDownload={(id) => setDownloadSessions(prev => prev.filter(d => d.sessionId !== id))}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}