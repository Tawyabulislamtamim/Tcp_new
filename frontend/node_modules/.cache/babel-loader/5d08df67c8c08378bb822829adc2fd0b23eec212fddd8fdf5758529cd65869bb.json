{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamov\\\\Desktop\\\\Net\\\\New folder\\\\tcp-file-transfer\\\\frontend\\\\src\\\\components\\\\DownloadProgress\\\\DownloadProgress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DownloadProgress.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DownloadProgress = ({\n  onClose\n}) => {\n  _s();\n  const [downloads, setDownloads] = useState([]);\n  const startDownload = async (filePath, fileName, clientId) => {\n    try {\n      // Start download session\n      const response = await fetch('/api/transfer/start-download', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          path: filePath,\n          client_id: clientId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to start download');\n      }\n      const sessionData = await response.json();\n\n      // Add to downloads list\n      const newDownload = {\n        sessionId: sessionData.session_id,\n        fileName: sessionData.file_name,\n        fileSize: sessionData.file_size,\n        clientId: sessionData.client_id,\n        progress: 0,\n        speed: 0,\n        eta: 0,\n        status: 'starting',\n        startTime: Date.now()\n      };\n      setDownloads(prev => [...prev, newDownload]);\n\n      // Start progress tracking\n      trackDownloadProgress(newDownload.sessionId);\n    } catch (error) {\n      console.error('Download error:', error);\n      alert(`Download failed: ${error.message}`);\n    }\n  };\n  const trackDownloadProgress = async sessionId => {\n    const pollProgress = async () => {\n      try {\n        const response = await fetch(`/api/transfer/download-progress/${sessionId}`);\n        if (!response.ok) return;\n        const progress = await response.json();\n        setDownloads(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          progress: progress.progress_percent,\n          speed: progress.speed_mbps,\n          eta: progress.eta_seconds,\n          bytesTransferred: progress.bytes_transferred,\n          status: progress.is_complete ? 'completed' : progress.is_processing ? 'downloading' : 'starting'\n        } : download));\n\n        // If complete and ready for download, trigger browser download\n        if (progress.is_complete && progress.is_ready_for_download) {\n          triggerBrowserDownload(sessionId);\n        } else if (!progress.error && !progress.is_complete) {\n          // Continue polling\n          setTimeout(pollProgress, 250); // Poll faster for better UI responsiveness\n        }\n      } catch (error) {\n        console.error('Progress tracking error:', error);\n        setDownloads(prev => prev.map(download => download.sessionId === sessionId ? {\n          ...download,\n          status: 'error',\n          error: error.message\n        } : download));\n      }\n    };\n    pollProgress();\n  };\n  const triggerBrowserDownload = sessionId => {\n    // Update status to show browser download is starting\n    setDownloads(prev => prev.map(download => download.sessionId === sessionId ? {\n      ...download,\n      status: 'browser-downloading'\n    } : download));\n\n    // Create hidden link to trigger download\n    const link = document.createElement('a');\n    link.href = `/api/transfer/stream-download/${sessionId}`;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up and update status\n    setTimeout(() => {\n      document.body.removeChild(link);\n      setDownloads(prev => prev.map(download => download.sessionId === sessionId ? {\n        ...download,\n        status: 'saved'\n      } : download));\n    }, 1000);\n  };\n  const cancelDownload = async sessionId => {\n    try {\n      await fetch(`/api/transfer/cancel-download/${sessionId}`, {\n        method: 'POST'\n      });\n      setDownloads(prev => prev.filter(download => download.sessionId !== sessionId));\n    } catch (error) {\n      console.error('Cancel error:', error);\n    }\n  };\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n  const formatTime = seconds => {\n    if (!seconds || seconds === Infinity) return '--';\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    if (hours > 0) return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Expose function globally for FileExplorer to use\n  window.startMegaStyleDownload = startDownload;\n  if (downloads.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"download-progress-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-progress-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCE5 Downloads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"downloads-list\",\n        children: downloads.map(download => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `download-item ${download.status}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: download.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatBytes(download.fileSize)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), download.speed > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [download.speed.toFixed(1), \" MB/s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true), download.eta > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"ETA: \", formatTime(download.eta)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${download.progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-text\",\n              children: [download.status === 'starting' && 'üîÑ Starting...', download.status === 'downloading' && `üìä ${download.progress.toFixed(1)}% - TCP Transfer`, download.status === 'completed' && '‚úÖ Transfer Complete', download.status === 'browser-downloading' && 'üíæ Saving to Downloads...', download.status === 'saved' && '‚úÖ Saved to Downloads', download.status === 'error' && '‚ùå Error']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download-actions\",\n            children: [download.status === 'downloading' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cancelDownload(download.sessionId),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), download.status === 'saved' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDownloads(prev => prev.filter(d => d.sessionId !== download.sessionId)),\n              className: \"remove-button\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, download.sessionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Files are downloaded in your browser with real-time TCP metrics tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(DownloadProgress, \"fBnkFHJxlQWnXAOpmeqszKWunIU=\");\n_c = DownloadProgress;\nexport default DownloadProgress;\nvar _c;\n$RefreshReg$(_c, \"DownloadProgress\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DownloadProgress","onClose","_s","downloads","setDownloads","startDownload","filePath","fileName","clientId","response","fetch","method","headers","body","JSON","stringify","path","client_id","ok","Error","sessionData","json","newDownload","sessionId","session_id","file_name","fileSize","file_size","progress","speed","eta","status","startTime","Date","now","prev","trackDownloadProgress","error","console","alert","message","pollProgress","map","download","progress_percent","speed_mbps","eta_seconds","bytesTransferred","bytes_transferred","is_complete","is_processing","is_ready_for_download","triggerBrowserDownload","setTimeout","link","document","createElement","href","style","display","appendChild","click","removeChild","cancelDownload","filter","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatTime","seconds","Infinity","hours","minutes","secs","toString","padStart","window","startMegaStyleDownload","length","className","children","_jsxFileName","lineNumber","columnNumber","onClick","width","d","_c","$RefreshReg$"],"sources":["C:/Users/iamov/Desktop/Net/New folder/tcp-file-transfer/frontend/src/components/DownloadProgress/DownloadProgress.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DownloadProgress.css';\r\n\r\nconst DownloadProgress = ({ onClose }) => {\r\n    const [downloads, setDownloads] = useState([]);\r\n\r\n    const startDownload = async (filePath, fileName, clientId) => {\r\n        try {\r\n            // Start download session\r\n            const response = await fetch('/api/transfer/start-download', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    path: filePath,\r\n                    client_id: clientId\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to start download');\r\n            }\r\n\r\n            const sessionData = await response.json();\r\n            \r\n            // Add to downloads list\r\n            const newDownload = {\r\n                sessionId: sessionData.session_id,\r\n                fileName: sessionData.file_name,\r\n                fileSize: sessionData.file_size,\r\n                clientId: sessionData.client_id,\r\n                progress: 0,\r\n                speed: 0,\r\n                eta: 0,\r\n                status: 'starting',\r\n                startTime: Date.now()\r\n            };\r\n\r\n            setDownloads(prev => [...prev, newDownload]);\r\n\r\n            // Start progress tracking\r\n            trackDownloadProgress(newDownload.sessionId);\r\n\r\n        } catch (error) {\r\n            console.error('Download error:', error);\r\n            alert(`Download failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const trackDownloadProgress = async (sessionId) => {\r\n        const pollProgress = async () => {\r\n            try {\r\n                const response = await fetch(`/api/transfer/download-progress/${sessionId}`);\r\n                if (!response.ok) return;\r\n\r\n                const progress = await response.json();\r\n                \r\n                setDownloads(prev => prev.map(download => \r\n                    download.sessionId === sessionId \r\n                        ? {\r\n                            ...download,\r\n                            progress: progress.progress_percent,\r\n                            speed: progress.speed_mbps,\r\n                            eta: progress.eta_seconds,\r\n                            bytesTransferred: progress.bytes_transferred,\r\n                            status: progress.is_complete ? 'completed' : \r\n                                   progress.is_processing ? 'downloading' : 'starting'\r\n                        }\r\n                        : download\r\n                ));\r\n\r\n                // If complete and ready for download, trigger browser download\r\n                if (progress.is_complete && progress.is_ready_for_download) {\r\n                    triggerBrowserDownload(sessionId);\r\n                } else if (!progress.error && !progress.is_complete) {\r\n                    // Continue polling\r\n                    setTimeout(pollProgress, 250); // Poll faster for better UI responsiveness\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Progress tracking error:', error);\r\n                setDownloads(prev => prev.map(download => \r\n                    download.sessionId === sessionId \r\n                        ? { ...download, status: 'error', error: error.message }\r\n                        : download\r\n                ));\r\n            }\r\n        };\r\n\r\n        pollProgress();\r\n    };\r\n\r\n    const triggerBrowserDownload = (sessionId) => {\r\n        // Update status to show browser download is starting\r\n        setDownloads(prev => prev.map(download => \r\n            download.sessionId === sessionId \r\n                ? { ...download, status: 'browser-downloading' }\r\n                : download\r\n        ));\r\n\r\n        // Create hidden link to trigger download\r\n        const link = document.createElement('a');\r\n        link.href = `/api/transfer/stream-download/${sessionId}`;\r\n        link.style.display = 'none';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        // Clean up and update status\r\n        setTimeout(() => {\r\n            document.body.removeChild(link);\r\n            setDownloads(prev => prev.map(download => \r\n                download.sessionId === sessionId \r\n                    ? { ...download, status: 'saved' }\r\n                    : download\r\n            ));\r\n        }, 1000);\r\n    };\r\n\r\n    const cancelDownload = async (sessionId) => {\r\n        try {\r\n            await fetch(`/api/transfer/cancel-download/${sessionId}`, {\r\n                method: 'POST'\r\n            });\r\n            \r\n            setDownloads(prev => prev.filter(download => download.sessionId !== sessionId));\r\n        } catch (error) {\r\n            console.error('Cancel error:', error);\r\n        }\r\n    };\r\n\r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 B';\r\n        const k = 1024;\r\n        const sizes = ['B', 'KB', 'MB', 'GB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        if (!seconds || seconds === Infinity) return '--';\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        \r\n        if (hours > 0) return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n        return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    // Expose function globally for FileExplorer to use\r\n    window.startMegaStyleDownload = startDownload;\r\n\r\n    if (downloads.length === 0) return null;\r\n\r\n    return (\r\n        <div className=\"download-progress-overlay\">\r\n            <div className=\"download-progress-panel\">\r\n                <div className=\"panel-header\">\r\n                    <h3>üì• Downloads</h3>\r\n                    <button onClick={onClose} className=\"close-button\">√ó</button>\r\n                </div>\r\n\r\n                <div className=\"downloads-list\">\r\n                    {downloads.map((download) => (\r\n                        <div key={download.sessionId} className={`download-item ${download.status}`}>\r\n                            <div className=\"download-info\">\r\n                                <div className=\"file-name\">{download.fileName}</div>\r\n                                <div className=\"file-details\">\r\n                                    <span>{formatBytes(download.fileSize)}</span>\r\n                                    {download.speed > 0 && (\r\n                                        <>\r\n                                            <span>‚Ä¢</span>\r\n                                            <span>{download.speed.toFixed(1)} MB/s</span>\r\n                                        </>\r\n                                    )}\r\n                                    {download.eta > 0 && (\r\n                                        <>\r\n                                            <span>‚Ä¢</span>\r\n                                            <span>ETA: {formatTime(download.eta)}</span>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"download-progress\">\r\n                                <div className=\"progress-bar\">\r\n                                    <div \r\n                                        className=\"progress-fill\" \r\n                                        style={{ width: `${download.progress}%` }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div className=\"progress-text\">\r\n                                    {download.status === 'starting' && 'üîÑ Starting...'}\r\n                                    {download.status === 'downloading' && `üìä ${download.progress.toFixed(1)}% - TCP Transfer`}\r\n                                    {download.status === 'completed' && '‚úÖ Transfer Complete'}\r\n                                    {download.status === 'browser-downloading' && 'üíæ Saving to Downloads...'}\r\n                                    {download.status === 'saved' && '‚úÖ Saved to Downloads'}\r\n                                    {download.status === 'error' && '‚ùå Error'}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"download-actions\">\r\n                                {download.status === 'downloading' && (\r\n                                    <button \r\n                                        onClick={() => cancelDownload(download.sessionId)}\r\n                                        className=\"cancel-button\"\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                )}\r\n                                {download.status === 'saved' && (\r\n                                    <button \r\n                                        onClick={() => setDownloads(prev => \r\n                                            prev.filter(d => d.sessionId !== download.sessionId)\r\n                                        )}\r\n                                        className=\"remove-button\"\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"panel-footer\">\r\n                    <small>Files are downloaded in your browser with real-time TCP metrics tracking</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DownloadProgress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}